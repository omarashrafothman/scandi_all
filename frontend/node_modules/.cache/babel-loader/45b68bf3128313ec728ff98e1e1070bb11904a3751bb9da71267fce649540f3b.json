{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\php_projects\\\\scandiweb\\\\frontend\\\\src\\\\pages\\\\category\\\\CategoryPage.jsx\";\nimport React, { Component } from 'react';\nimport ProductBox from '../../components/product/ProductBox';\nimport { gql } from '@apollo/client';\nimport { Query } from '@apollo/client/react/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_CATEGORY_PRODUCTS = gql`\n    query GetCategoryProducts($categoryId: Int!) {\n        category(id: $categoryId) {\n            id\n            name\n            products {\n                id\n                name\n                price\n                galleries {\n                    image_url\n                }\n            }\n        }\n    }\n`;\nclass CategoryPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categoryId: null\n    };\n  }\n  componentDidMount() {\n    // Extract the category ID from the URL\n    const categoryId = parseInt(window.location.pathname.split(\"/\")[2]); // Ensure the ID is an integer\n    this.setState({\n      categoryId\n    });\n  }\n  render() {\n    const {\n      categoryId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoryPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: categoryId ? `Category ID: ${categoryId}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), categoryId !== null && /*#__PURE__*/_jsxDEV(Query, {\n          query: GET_CATEGORY_PRODUCTS,\n          variables: {\n            categoryId\n          },\n          children: ({\n            loading,\n            error,\n            data\n          }) => {\n            if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 53\n            }, this);\n            if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Error: \", error.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 51\n            }, this);\n            const {\n              category\n            } = data;\n            if (category && category.products.length > 0) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: category.products.map(product => {\n                  var _product$galleries$;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12 col-lg-4\",\n                    children: /*#__PURE__*/_jsxDEV(ProductBox, {\n                      name: product.name,\n                      image: (_product$galleries$ = product.galleries[0]) === null || _product$galleries$ === void 0 ? void 0 : _product$galleries$.image_url // Optional chaining for safety\n                      ,\n                      price: product.price,\n                      id: product.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 53\n                    }, this)\n                  }, product.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 41\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No products found in this category.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 44\n              }, this);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default CategoryPage;","map":{"version":3,"names":["React","Component","ProductBox","gql","Query","jsxDEV","_jsxDEV","GET_CATEGORY_PRODUCTS","CategoryPage","constructor","args","state","categoryId","componentDidMount","parseInt","window","location","pathname","split","setState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","query","variables","loading","error","data","message","category","products","length","map","product","_product$galleries$","name","image","galleries","image_url","price","id"],"sources":["C:/xampp/htdocs/php_projects/scandiweb/frontend/src/pages/category/CategoryPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ProductBox from '../../components/product/ProductBox';\r\nimport { gql } from '@apollo/client';\r\nimport { Query } from '@apollo/client/react/components';\r\n\r\nconst GET_CATEGORY_PRODUCTS = gql`\r\n    query GetCategoryProducts($categoryId: Int!) {\r\n        category(id: $categoryId) {\r\n            id\r\n            name\r\n            products {\r\n                id\r\n                name\r\n                price\r\n                galleries {\r\n                    image_url\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass CategoryPage extends Component {\r\n    state = {\r\n        categoryId: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Extract the category ID from the URL\r\n        const categoryId = parseInt(window.location.pathname.split(\"/\")[2]); // Ensure the ID is an integer\r\n        this.setState({ categoryId });\r\n    }\r\n\r\n    render() {\r\n        const { categoryId } = this.state;\r\n\r\n        return (\r\n            <div className='categoryPage'>\r\n                <div className='container py-5'>\r\n                    <h2>{categoryId ? `Category ID: ${categoryId}` : 'Loading...'}</h2>\r\n                    {categoryId !== null && (\r\n                        <Query query={GET_CATEGORY_PRODUCTS} variables={{ categoryId }}>\r\n                            {({ loading, error, data }) => {\r\n                                if (loading) return <p>Loading...</p>;\r\n                                if (error) return <p>Error: {error.message}</p>;\r\n\r\n                                const { category } = data;\r\n\r\n                                if (category && category.products.length > 0) {\r\n                                    return (\r\n                                        <div className='row'>\r\n                                            {category.products.map((product) => (\r\n                                                <div className='col-12 col-lg-4' key={product.id}>\r\n                                                    <ProductBox\r\n                                                        name={product.name}\r\n                                                        image={product.galleries[0]?.image_url} // Optional chaining for safety\r\n                                                        price={product.price}\r\n                                                        id={product.id}\r\n                                                    />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    );\r\n                                } else {\r\n                                    return <p>No products found in this category.</p>;\r\n                                }\r\n                            }}\r\n                        </Query>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}