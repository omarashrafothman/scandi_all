{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\php_projects\\\\scandiweb_store\\\\frontend\\\\src\\\\pages\\\\productDetails\\\\ProductDetails.jsx\";\nimport React, { Component } from 'react';\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport { GET_PRODUCT_DETAILS } from '../../graphql/queries.js'; // استعلام GraphQL الخاص بك\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProductDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchProductDetails = () => {\n      const {\n        sku_id\n      } = this.state;\n      console.log(sku_id);\n      if (sku_id) {\n        this.client.query({\n          query: GET_PRODUCT_DETAILS,\n          variables: {\n            sku_id\n          }\n        }).then(response => {\n          this.setState({\n            product: response.data.product,\n            loading: false,\n            error: null\n          });\n        }).catch(error => {\n          this.setState({\n            loading: false,\n            error: error\n          });\n        });\n      }\n    };\n    this.state = {\n      product: null,\n      loading: true,\n      error: null,\n      sku_id: Number(window.location.pathname.split(\"/\")[2]) // إضافة sku_id إلى حالة المكون\n    };\n\n    // إعداد Apollo Client\n    this.client = new ApolloClient({\n      uri: 'http://localhost/php_projects/scandiweb_store/backend/index.php',\n      // ضع رابط GraphQL API الخاص بك هنا\n      cache: new InMemoryCache()\n    });\n  }\n  componentDidMount() {\n    const param = Number(window.location.pathname.split(\"/\")[2] || null);\n    console.log(param);\n    this.fetchProductDetails();\n    console.log(typeof this.state.sku_id);\n  }\n  render() {\n    const {\n      product,\n      loading,\n      error\n    } = this.state;\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }, this);\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error occurred:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error.message || error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ProductDetails;","map":{"version":3,"names":["React","Component","ApolloClient","InMemoryCache","gql","GET_PRODUCT_DETAILS","jsxDEV","_jsxDEV","ProductDetails","constructor","props","fetchProductDetails","sku_id","state","console","log","client","query","variables","then","response","setState","product","data","loading","error","catch","Number","window","location","pathname","split","uri","cache","componentDidMount","param","render","children","fileName","_jsxFileName","lineNumber","columnNumber","message"],"sources":["C:/laragon/www/php_projects/scandiweb_store/frontend/src/pages/productDetails/ProductDetails.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\nimport { GET_PRODUCT_DETAILS } from '../../graphql/queries.js'; // استعلام GraphQL الخاص بك\r\n\r\nclass ProductDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: null,\r\n            loading: true,\r\n            error: null,\r\n            sku_id: Number(window.location.pathname.split(\"/\")[2]),  // إضافة sku_id إلى حالة المكون\r\n        };\r\n\r\n        // إعداد Apollo Client\r\n        this.client = new ApolloClient({\r\n            uri: 'http://localhost/php_projects/scandiweb_store/backend/index.php', // ضع رابط GraphQL API الخاص بك هنا\r\n            cache: new InMemoryCache(),\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const param = Number(window.location.pathname.split(\"/\")[2] || null);\r\n        console.log(param)\r\n        this.fetchProductDetails();\r\n\r\n        console.log(typeof this.state.sku_id)\r\n    }\r\n\r\n    fetchProductDetails = () => {\r\n        const { sku_id } = this.state;\r\n        console.log(sku_id)\r\n\r\n        if (sku_id) {\r\n            this.client\r\n                .query({\r\n                    query: GET_PRODUCT_DETAILS,\r\n                    variables: { sku_id },\r\n                })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        product: response.data.product,\r\n                        loading: false,\r\n                        error: null,\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        loading: false,\r\n                        error: error,\r\n                    });\r\n                });\r\n\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { product, loading, error } = this.state;\r\n\r\n        if (loading) return <p>Loading...</p>;\r\n\r\n        if (error) {\r\n            return (\r\n                <div>\r\n                    <p>Error occurred:</p>\r\n                    <p>{error.message || error}</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                hello\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}