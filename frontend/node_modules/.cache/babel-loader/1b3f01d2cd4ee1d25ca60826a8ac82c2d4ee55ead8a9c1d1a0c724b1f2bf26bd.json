{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { useIsomorphicLayoutEffect } from \"./internal/useIsomorphicLayoutEffect.js\";\n/**\n *\n *\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\n *\n * @example\n * ```jsx\n * import { gql, useMutation } from '@apollo/client';\n *\n * const ADD_TODO = gql`\n *   mutation AddTodo($type: String!) {\n *     addTodo(type: $type) {\n *       id\n *       type\n *     }\n *   }\n * `;\n *\n * function AddTodo() {\n *   let input;\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\n *\n *   return (\n *     <div>\n *       <form\n *         onSubmit={e => {\n *           e.preventDefault();\n *           addTodo({ variables: { type: input.value } });\n *           input.value = '';\n *         }}\n *       >\n *         <input\n *           ref={node => {\n *             input = node;\n *           }}\n *         />\n *         <button type=\"submit\">Add Todo</button>\n *       </form>\n *     </div>\n *   );\n * }\n * ```\n * @since 3.0.0\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\n * @param options - Options to control how the mutation is executed.\n * @returns A tuple in the form of `[mutate, result]`\n */\nexport function useMutation(mutation, options) {\n  var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  var _a = React.useState({\n      called: false,\n      loading: false,\n      client: client\n    }),\n    result = _a[0],\n    setResult = _a[1];\n  var ref = React.useRef({\n    result: result,\n    mutationId: 0,\n    isMounted: true,\n    client: client,\n    mutation: mutation,\n    options: options\n  });\n  useIsomorphicLayoutEffect(function () {\n    Object.assign(ref.current, {\n      client: client,\n      options: options,\n      mutation: mutation\n    });\n  });\n  var execute = React.useCallback(function (executeOptions) {\n    if (executeOptions === void 0) {\n      executeOptions = {};\n    }\n    var _a = ref.current,\n      options = _a.options,\n      mutation = _a.mutation;\n    var baseOptions = __assign(__assign({}, options), {\n      mutation: mutation\n    });\n    var client = executeOptions.client || ref.current.client;\n    if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client: client\n      });\n    }\n    var mutationId = ++ref.current.mutationId;\n    var clientOptions = mergeOptions(baseOptions, executeOptions);\n    return client.mutate(clientOptions).then(function (response) {\n      var _a, _b;\n      var data = response.data,\n        errors = response.errors;\n      var error = errors && errors.length > 0 ? new ApolloError({\n        graphQLErrors: errors\n      }) : void 0;\n      var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n      if (error && onError) {\n        onError(error, clientOptions);\n      }\n      if (mutationId === ref.current.mutationId && !clientOptions.ignoreResults) {\n        var result_1 = {\n          called: true,\n          loading: false,\n          data: data,\n          error: error,\n          client: client\n        };\n        if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n          setResult(ref.current.result = result_1);\n        }\n      }\n      var onCompleted = executeOptions.onCompleted || ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onCompleted);\n      if (!error) {\n        onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\n      }\n      return response;\n    }).catch(function (error) {\n      var _a;\n      if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n        var result_2 = {\n          loading: false,\n          error: error,\n          data: void 0,\n          called: true,\n          client: client\n        };\n        if (!equal(ref.current.result, result_2)) {\n          setResult(ref.current.result = result_2);\n        }\n      }\n      var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n      if (onError) {\n        onError(error, clientOptions);\n        // TODO(brian): why are we returning this here???\n        return {\n          data: void 0,\n          errors: error\n        };\n      }\n      throw error;\n    });\n  }, []);\n  var reset = React.useCallback(function () {\n    if (ref.current.isMounted) {\n      var result_3 = {\n        called: false,\n        loading: false,\n        client: ref.current.client\n      };\n      Object.assign(ref.current, {\n        mutationId: 0,\n        result: result_3\n      });\n      setResult(result_3);\n    }\n  }, []);\n  React.useEffect(function () {\n    var current = ref.current;\n    current.isMounted = true;\n    return function () {\n      current.isMounted = false;\n    };\n  }, []);\n  return [execute, __assign({\n    reset: reset\n  }, result)];\n}","map":{"version":3,"names":["__assign","React","mergeOptions","equal","DocumentType","verifyDocumentType","ApolloError","useApolloClient","useIsomorphicLayoutEffect","useMutation","mutation","options","client","Mutation","_a","useState","called","loading","result","setResult","ref","useRef","mutationId","isMounted","Object","assign","current","execute","useCallback","executeOptions","baseOptions","ignoreResults","error","data","clientOptions","mutate","then","response","_b","errors","length","graphQLErrors","onError","result_1","onCompleted","catch","result_2","reset","result_3","useEffect"],"sources":["C:/laragon/www/php_projects/scandiweb_store/frontend/node_modules/@apollo/client/react/hooks/useMutation.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { useIsomorphicLayoutEffect } from \"./internal/useIsomorphicLayoutEffect.js\";\n/**\n *\n *\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\n *\n * @example\n * ```jsx\n * import { gql, useMutation } from '@apollo/client';\n *\n * const ADD_TODO = gql`\n *   mutation AddTodo($type: String!) {\n *     addTodo(type: $type) {\n *       id\n *       type\n *     }\n *   }\n * `;\n *\n * function AddTodo() {\n *   let input;\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\n *\n *   return (\n *     <div>\n *       <form\n *         onSubmit={e => {\n *           e.preventDefault();\n *           addTodo({ variables: { type: input.value } });\n *           input.value = '';\n *         }}\n *       >\n *         <input\n *           ref={node => {\n *             input = node;\n *           }}\n *         />\n *         <button type=\"submit\">Add Todo</button>\n *       </form>\n *     </div>\n *   );\n * }\n * ```\n * @since 3.0.0\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\n * @param options - Options to control how the mutation is executed.\n * @returns A tuple in the form of `[mutate, result]`\n */\nexport function useMutation(mutation, options) {\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(mutation, DocumentType.Mutation);\n    var _a = React.useState({\n        called: false,\n        loading: false,\n        client: client,\n    }), result = _a[0], setResult = _a[1];\n    var ref = React.useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options,\n    });\n    useIsomorphicLayoutEffect(function () {\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\n    });\n    var execute = React.useCallback(function (executeOptions) {\n        if (executeOptions === void 0) { executeOptions = {}; }\n        var _a = ref.current, options = _a.options, mutation = _a.mutation;\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\n        var client = executeOptions.client || ref.current.client;\n        if (!ref.current.result.loading &&\n            !baseOptions.ignoreResults &&\n            ref.current.isMounted) {\n            setResult((ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client,\n            }));\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\n        return client\n            .mutate(clientOptions)\n            .then(function (response) {\n            var _a, _b;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0 ?\n                new ApolloError({ graphQLErrors: errors })\n                : void 0;\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (error && onError) {\n                onError(error, clientOptions);\n            }\n            if (mutationId === ref.current.mutationId &&\n                !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client,\n                };\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n                    setResult((ref.current.result = result_1));\n                }\n            }\n            var onCompleted = executeOptions.onCompleted || ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onCompleted);\n            if (!error) {\n                onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\n            }\n            return response;\n        })\n            .catch(function (error) {\n            var _a;\n            if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client,\n                };\n                if (!equal(ref.current.result, result_2)) {\n                    setResult((ref.current.result = result_2));\n                }\n            }\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (onError) {\n                onError(error, clientOptions);\n                // TODO(brian): why are we returning this here???\n                return { data: void 0, errors: error };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = React.useCallback(function () {\n        if (ref.current.isMounted) {\n            var result_3 = {\n                called: false,\n                loading: false,\n                client: ref.current.client,\n            };\n            Object.assign(ref.current, { mutationId: 0, result: result_3 });\n            setResult(result_3);\n        }\n    }, []);\n    React.useEffect(function () {\n        var current = ref.current;\n        current.isMounted = true;\n        return function () {\n            current.isMounted = false;\n        };\n    }, []);\n    return [execute, __assign({ reset: reset }, result)];\n}\n//# sourceMappingURL=useMutation.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}