{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\php_projects\\\\scandiweb_store\\\\frontend\\\\src\\\\pages\\\\category\\\\CategoryPage.jsx\";\nimport React, { Component } from 'react';\nimport ProductBox from '../../components/product/ProductBox';\n\n// المكون CategoryPage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CategoryPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categoryName: null,\n      // لتخزين اسم الفئة\n      products: [],\n      // لتخزين المنتجات\n      loading: true,\n      // لتحديد حالة التحميل\n      error: null // لتخزين رسالة الخطأ إذا حدثت\n    };\n    // دالة fetchProducts لجلب المنتجات من الـ API باستخدام fetch\n    this.fetchProducts = async () => {\n      try {\n        // هذا هو استعلام GraphQL لجلب المنتجات مع الفئات\n        const query = `\n                query GetAllProductsWithCategories {\n                    products {\n                        id\n                        name\n                        in_stock\n                        galleries {\n                            image_url\n                        }\n                        description\n                        category {\n                            id\n                            name\n                        }\n                        sku_id\n                        prices {\n                            amount\n                            currency_label\n                            currency_symbol\n                        }\n                    }\n                }\n            `;\n\n        // استخدام fetch لإرسال الطلب إلى الـ API\n        const response = await fetch('http://localhost/php_projects/scandiweb_store/backend/index.php', {\n          method: 'POST',\n          // إرسال طلب من نوع POST\n          headers: {\n            'Content-Type': 'application/json' // إعداد نوع البيانات المُرسلة\n          },\n          body: JSON.stringify({\n            query\n          }) // إرسال استعلام GraphQL كجسم الطلب\n        });\n\n        // تحويل الاستجابة إلى JSON\n        const result = await response.json();\n\n        // التحقق من وجود أخطاء في النتيجة\n        if (result.errors) {\n          // إذا حدث خطأ في الاستعلام، تخزين الخطأ في الحالة\n          this.setState({\n            error: result.errors[0].message,\n            loading: false\n          });\n        } else {\n          // إذا نجح الاستعلام، تحديث المنتجات وإيقاف التحميل\n          this.setState({\n            products: result.data.products,\n            loading: false\n          });\n        }\n      } catch (err) {\n        // إذا فشل الطلب، تخزين رسالة الخطأ في الحالة\n        this.setState({\n          error: 'Failed to fetch products',\n          loading: false\n        });\n      }\n    };\n  }\n  componentDidMount() {\n    // استخراج اسم الفئة من رابط الـ URL\n    const categoryName = window.location.pathname.split(\"/\")[2];\n    this.setState({\n      categoryName\n    }, this.fetchProducts); // تحديث اسم الفئة وجلب المنتجات بناءً عليه\n  }\n\n  render() {\n    const {\n      categoryName,\n      products,\n      loading,\n      error\n    } = this.state;\n\n    // عرض حالة التحميل\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }, this);\n    }\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this);\n    }\n    let filteredProducts;\n    if (categoryName === 'all') {\n      filteredProducts = products;\n    } else {\n      filteredProducts = products.filter(product => product.category.name === categoryName);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoryPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: categoryName ? `${categoryName}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), console.log(filteredProducts[0].in_stock), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: filteredProducts.length > 0 ? filteredProducts.map(product => {\n            var _product$galleries$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-lg-4\",\n              children: /*#__PURE__*/_jsxDEV(ProductBox, {\n                name: product.name,\n                image: ((_product$galleries$ = product.galleries[0]) === null || _product$galleries$ === void 0 ? void 0 : _product$galleries$.image_url) || 'default-image-url',\n                price: product.prices[0][\"amount\"],\n                id: product.sku_id,\n                stock: product.in_stock\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this)\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No products found in this category.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default CategoryPage;","map":{"version":3,"names":["React","Component","ProductBox","jsxDEV","_jsxDEV","CategoryPage","constructor","args","state","categoryName","products","loading","error","fetchProducts","query","response","fetch","method","headers","body","JSON","stringify","result","json","errors","setState","message","data","err","componentDidMount","window","location","pathname","split","render","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredProducts","filter","product","category","name","className","console","log","in_stock","length","map","_product$galleries$","image","galleries","image_url","price","prices","id","sku_id","stock"],"sources":["C:/laragon/www/php_projects/scandiweb_store/frontend/src/pages/category/CategoryPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ProductBox from '../../components/product/ProductBox';\r\n\r\n// المكون CategoryPage\r\nclass CategoryPage extends Component {\r\n    state = {\r\n        categoryName: null, // لتخزين اسم الفئة\r\n        products: [], // لتخزين المنتجات\r\n        loading: true, // لتحديد حالة التحميل\r\n        error: null // لتخزين رسالة الخطأ إذا حدثت\r\n    };\r\n\r\n    componentDidMount() {\r\n        // استخراج اسم الفئة من رابط الـ URL\r\n        const categoryName = window.location.pathname.split(\"/\")[2];\r\n        this.setState({ categoryName }, this.fetchProducts); // تحديث اسم الفئة وجلب المنتجات بناءً عليه\r\n    }\r\n\r\n    // دالة fetchProducts لجلب المنتجات من الـ API باستخدام fetch\r\n    fetchProducts = async () => {\r\n        try {\r\n            // هذا هو استعلام GraphQL لجلب المنتجات مع الفئات\r\n            const query = `\r\n                query GetAllProductsWithCategories {\r\n                    products {\r\n                        id\r\n                        name\r\n                        in_stock\r\n                        galleries {\r\n                            image_url\r\n                        }\r\n                        description\r\n                        category {\r\n                            id\r\n                            name\r\n                        }\r\n                        sku_id\r\n                        prices {\r\n                            amount\r\n                            currency_label\r\n                            currency_symbol\r\n                        }\r\n                    }\r\n                }\r\n            `;\r\n\r\n            // استخدام fetch لإرسال الطلب إلى الـ API\r\n            const response = await fetch('http://localhost/php_projects/scandiweb_store/backend/index.php', {\r\n                method: 'POST', // إرسال طلب من نوع POST\r\n                headers: {\r\n                    'Content-Type': 'application/json', // إعداد نوع البيانات المُرسلة\r\n                },\r\n                body: JSON.stringify({ query }) // إرسال استعلام GraphQL كجسم الطلب\r\n            });\r\n\r\n            // تحويل الاستجابة إلى JSON\r\n            const result = await response.json();\r\n\r\n            // التحقق من وجود أخطاء في النتيجة\r\n            if (result.errors) {\r\n                // إذا حدث خطأ في الاستعلام، تخزين الخطأ في الحالة\r\n                this.setState({ error: result.errors[0].message, loading: false });\r\n            } else {\r\n                // إذا نجح الاستعلام، تحديث المنتجات وإيقاف التحميل\r\n                this.setState({ products: result.data.products, loading: false });\r\n            }\r\n        } catch (err) {\r\n            // إذا فشل الطلب، تخزين رسالة الخطأ في الحالة\r\n            this.setState({ error: 'Failed to fetch products', loading: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { categoryName, products, loading, error } = this.state;\r\n\r\n        // عرض حالة التحميل\r\n        if (loading) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n\r\n        if (error) {\r\n            return <p>Error: {error}</p>;\r\n        }\r\n\r\n\r\n        let filteredProducts;\r\n        if (categoryName === 'all') {\r\n            filteredProducts = products;\r\n        } else {\r\n            filteredProducts = products.filter(product =>\r\n                product.category.name === categoryName\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='categoryPage'>\r\n                <div className='container py-5'>\r\n                    <h2>{categoryName ? `${categoryName}` : 'Loading...'}</h2>\r\n                    {console.log(filteredProducts[0].in_stock)}\r\n                    <div className='row'>\r\n                        {filteredProducts.length > 0 ? (\r\n                            filteredProducts.map((product) => (\r\n                                <div className='col-12 col-lg-4' key={product.id}>\r\n                                    <ProductBox\r\n                                        name={product.name}\r\n                                        image={product.galleries[0]?.image_url || 'default-image-url'}\r\n                                        price={product.prices[0][\"amount\"]}\r\n                                        id={product.sku_id}\r\n                                        stock={product.in_stock}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            <p>No products found in this category.</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}