{"ast":null,"code":"import * as PropTypes from \"prop-types\";\nimport { useMutation } from \"../hooks/index.js\";\n/**\n * @deprecated\n * Official support for React Apollo render prop components ended in March 2020.\n * This library is still included in the `@apollo/client` package,\n * but it no longer receives feature updates or bug fixes.\n */\nexport function Mutation(props) {\n  var _a = useMutation(props.mutation, props),\n    runMutation = _a[0],\n    result = _a[1];\n  return props.children ? props.children(runMutation, result) : null;\n}\nMutation.propTypes = {\n  mutation: PropTypes.object.isRequired,\n  variables: PropTypes.object,\n  optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  refetchQueries: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])), PropTypes.func]),\n  awaitRefetchQueries: PropTypes.bool,\n  update: PropTypes.func,\n  children: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func,\n  onError: PropTypes.func,\n  fetchPolicy: PropTypes.string\n};","map":{"version":3,"names":["PropTypes","useMutation","Mutation","props","_a","mutation","runMutation","result","children","propTypes","object","isRequired","variables","optimisticResponse","oneOfType","func","refetchQueries","arrayOf","string","awaitRefetchQueries","bool","update","onCompleted","onError","fetchPolicy"],"sources":["C:\\xampp\\htdocs\\php_projects\\scandiweb\\frontend\\node_modules\\@apollo\\src\\react\\components\\Mutation.tsx"],"sourcesContent":["import * as PropTypes from \"prop-types\";\nimport type * as ReactTypes from \"react\";\n\nimport type { OperationVariables } from \"../../core/index.js\";\nimport type { MutationComponentOptions } from \"./types.js\";\nimport { useMutation } from \"../hooks/index.js\";\n\n/**\n * @deprecated\n * Official support for React Apollo render prop components ended in March 2020.\n * This library is still included in the `@apollo/client` package,\n * but it no longer receives feature updates or bug fixes.\n */\nexport function Mutation<TData = any, TVariables = OperationVariables>(\n  props: MutationComponentOptions<TData, TVariables>\n): ReactTypes.JSX.Element | null {\n  const [runMutation, result] = useMutation(props.mutation, props);\n  return props.children ? props.children(runMutation, result) : null;\n}\n\nexport interface Mutation<TData, TVariables> {\n  propTypes: PropTypes.InferProps<MutationComponentOptions<TData, TVariables>>;\n}\n\nMutation.propTypes = {\n  mutation: PropTypes.object.isRequired,\n  variables: PropTypes.object,\n  optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  refetchQueries: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n    PropTypes.func,\n  ]),\n  awaitRefetchQueries: PropTypes.bool,\n  update: PropTypes.func,\n  children: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func,\n  onError: PropTypes.func,\n  fetchPolicy: PropTypes.string,\n} as Mutation<any, any>[\"propTypes\"];\n"],"mappings":"AAAA,OAAO,KAAKA,SAAS,MAAM,YAAY;AAKvC,SAASC,WAAW,QAAQ,mBAAmB;AAE/C;;;;;;AAMA,OAAM,SAAUC,QAAQA,CACtBC,KAAkD;EAE5C,IAAAC,EAAA,GAAwBH,WAAW,CAACE,KAAK,CAACE,QAAQ,EAAEF,KAAK,CAAC;IAAzDG,WAAW,GAAAF,EAAA;IAAEG,MAAM,GAAAH,EAAA,GAAsC;EAChE,OAAOD,KAAK,CAACK,QAAQ,GAAGL,KAAK,CAACK,QAAQ,CAACF,WAAW,EAAEC,MAAM,CAAC,GAAG,IAAI;AACpE;AAMAL,QAAQ,CAACO,SAAS,GAAG;EACnBJ,QAAQ,EAAEL,SAAS,CAACU,MAAM,CAACC,UAAU;EACrCC,SAAS,EAAEZ,SAAS,CAACU,MAAM;EAC3BG,kBAAkB,EAAEb,SAAS,CAACc,SAAS,CAAC,CAACd,SAAS,CAACU,MAAM,EAAEV,SAAS,CAACe,IAAI,CAAC,CAAC;EAC3EC,cAAc,EAAEhB,SAAS,CAACc,SAAS,CAAC,CAClCd,SAAS,CAACiB,OAAO,CACfjB,SAAS,CAACc,SAAS,CAAC,CAACd,SAAS,CAACkB,MAAM,EAAElB,SAAS,CAACU,MAAM,CAAC,CAAC,CAC1D,EACDV,SAAS,CAACe,IAAI,CACf,CAAC;EACFI,mBAAmB,EAAEnB,SAAS,CAACoB,IAAI;EACnCC,MAAM,EAAErB,SAAS,CAACe,IAAI;EACtBP,QAAQ,EAAER,SAAS,CAACe,IAAI,CAACJ,UAAU;EACnCW,WAAW,EAAEtB,SAAS,CAACe,IAAI;EAC3BQ,OAAO,EAAEvB,SAAS,CAACe,IAAI;EACvBS,WAAW,EAAExB,SAAS,CAACkB;CACW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}