{"ast":null,"code":"import * as React from \"rehackt\";\nimport { assertWrappedQueryRef, getWrappedPromise, unwrapQueryRef, updateWrappedQueryRef } from \"../internal/index.js\";\nimport { __use, wrapHook } from \"./internal/index.js\";\nimport { toApolloError } from \"./useSuspenseQuery.js\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useReadQuery(queryRef) {\n  var unwrapped = unwrapQueryRef(queryRef);\n  return wrapHook(\"useReadQuery\", _useReadQuery, unwrapped ? unwrapped[\"observable\"]\n  // in the case of a \"transported\" queryRef object, we need to use the\n  // client that's available to us at the current position in the React tree\n  // that ApolloClient will then have the job to recreate a real queryRef from\n  // the transported object\n  // This is just a context read - it's fine to do this conditionally.\n  // This hook wrapper also shouldn't be optimized by React Compiler.\n  // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  : useApolloClient())(queryRef);\n}\nfunction _useReadQuery(queryRef) {\n  assertWrappedQueryRef(queryRef);\n  var internalQueryRef = React.useMemo(function () {\n    return unwrapQueryRef(queryRef);\n  }, [queryRef]);\n  var getPromise = React.useCallback(function () {\n    return getWrappedPromise(queryRef);\n  }, [queryRef]);\n  if (internalQueryRef.disposed) {\n    internalQueryRef.reinitialize();\n    updateWrappedQueryRef(queryRef, internalQueryRef.promise);\n  }\n  React.useEffect(function () {\n    return internalQueryRef.retain();\n  }, [internalQueryRef]);\n  var promise = useSyncExternalStore(React.useCallback(function (forceUpdate) {\n    return internalQueryRef.listen(function (promise) {\n      updateWrappedQueryRef(queryRef, promise);\n      forceUpdate();\n    });\n  }, [internalQueryRef, queryRef]), getPromise, getPromise);\n  var result = __use(promise);\n  return React.useMemo(function () {\n    return {\n      data: result.data,\n      networkStatus: result.networkStatus,\n      error: toApolloError(result)\n    };\n  }, [result]);\n}","map":{"version":3,"names":["React","assertWrappedQueryRef","getWrappedPromise","unwrapQueryRef","updateWrappedQueryRef","__use","wrapHook","toApolloError","useSyncExternalStore","useApolloClient","useReadQuery","queryRef","unwrapped","_useReadQuery","internalQueryRef","useMemo","getPromise","useCallback","disposed","reinitialize","promise","useEffect","retain","forceUpdate","listen","result","data","networkStatus","error"],"sources":["C:/laragon/www/php_projects/scandiweb_store/frontend/node_modules/@apollo/client/react/hooks/useReadQuery.js"],"sourcesContent":["import * as React from \"rehackt\";\nimport { assertWrappedQueryRef, getWrappedPromise, unwrapQueryRef, updateWrappedQueryRef, } from \"../internal/index.js\";\nimport { __use, wrapHook } from \"./internal/index.js\";\nimport { toApolloError } from \"./useSuspenseQuery.js\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useReadQuery(queryRef) {\n    var unwrapped = unwrapQueryRef(queryRef);\n    return wrapHook(\"useReadQuery\", _useReadQuery, unwrapped ?\n        unwrapped[\"observable\"]\n        // in the case of a \"transported\" queryRef object, we need to use the\n        // client that's available to us at the current position in the React tree\n        // that ApolloClient will then have the job to recreate a real queryRef from\n        // the transported object\n        // This is just a context read - it's fine to do this conditionally.\n        // This hook wrapper also shouldn't be optimized by React Compiler.\n        // eslint-disable-next-line react-compiler/react-compiler\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        : useApolloClient())(queryRef);\n}\nfunction _useReadQuery(queryRef) {\n    assertWrappedQueryRef(queryRef);\n    var internalQueryRef = React.useMemo(function () { return unwrapQueryRef(queryRef); }, [queryRef]);\n    var getPromise = React.useCallback(function () { return getWrappedPromise(queryRef); }, [queryRef]);\n    if (internalQueryRef.disposed) {\n        internalQueryRef.reinitialize();\n        updateWrappedQueryRef(queryRef, internalQueryRef.promise);\n    }\n    React.useEffect(function () { return internalQueryRef.retain(); }, [internalQueryRef]);\n    var promise = useSyncExternalStore(React.useCallback(function (forceUpdate) {\n        return internalQueryRef.listen(function (promise) {\n            updateWrappedQueryRef(queryRef, promise);\n            forceUpdate();\n        });\n    }, [internalQueryRef, queryRef]), getPromise, getPromise);\n    var result = __use(promise);\n    return React.useMemo(function () {\n        return {\n            data: result.data,\n            networkStatus: result.networkStatus,\n            error: toApolloError(result),\n        };\n    }, [result]);\n}\n//# sourceMappingURL=useReadQuery.js.map"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,SAAS;AAChC,SAASC,qBAAqB,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,qBAAqB,QAAS,sBAAsB;AACvH,SAASC,KAAK,EAAEC,QAAQ,QAAQ,qBAAqB;AACrD,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,eAAe,QAAQ,sBAAsB;AACtD,OAAO,SAASC,YAAYA,CAACC,QAAQ,EAAE;EACnC,IAAIC,SAAS,GAAGT,cAAc,CAACQ,QAAQ,CAAC;EACxC,OAAOL,QAAQ,CAAC,cAAc,EAAEO,aAAa,EAAED,SAAS,GACpDA,SAAS,CAAC,YAAY;EACtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,EACEH,eAAe,CAAC,CAAC,CAAC,CAACE,QAAQ,CAAC;AACtC;AACA,SAASE,aAAaA,CAACF,QAAQ,EAAE;EAC7BV,qBAAqB,CAACU,QAAQ,CAAC;EAC/B,IAAIG,gBAAgB,GAAGd,KAAK,CAACe,OAAO,CAAC,YAAY;IAAE,OAAOZ,cAAc,CAACQ,QAAQ,CAAC;EAAE,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAClG,IAAIK,UAAU,GAAGhB,KAAK,CAACiB,WAAW,CAAC,YAAY;IAAE,OAAOf,iBAAiB,CAACS,QAAQ,CAAC;EAAE,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACnG,IAAIG,gBAAgB,CAACI,QAAQ,EAAE;IAC3BJ,gBAAgB,CAACK,YAAY,CAAC,CAAC;IAC/Bf,qBAAqB,CAACO,QAAQ,EAAEG,gBAAgB,CAACM,OAAO,CAAC;EAC7D;EACApB,KAAK,CAACqB,SAAS,CAAC,YAAY;IAAE,OAAOP,gBAAgB,CAACQ,MAAM,CAAC,CAAC;EAAE,CAAC,EAAE,CAACR,gBAAgB,CAAC,CAAC;EACtF,IAAIM,OAAO,GAAGZ,oBAAoB,CAACR,KAAK,CAACiB,WAAW,CAAC,UAAUM,WAAW,EAAE;IACxE,OAAOT,gBAAgB,CAACU,MAAM,CAAC,UAAUJ,OAAO,EAAE;MAC9ChB,qBAAqB,CAACO,QAAQ,EAAES,OAAO,CAAC;MACxCG,WAAW,CAAC,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,CAACT,gBAAgB,EAAEH,QAAQ,CAAC,CAAC,EAAEK,UAAU,EAAEA,UAAU,CAAC;EACzD,IAAIS,MAAM,GAAGpB,KAAK,CAACe,OAAO,CAAC;EAC3B,OAAOpB,KAAK,CAACe,OAAO,CAAC,YAAY;IAC7B,OAAO;MACHW,IAAI,EAAED,MAAM,CAACC,IAAI;MACjBC,aAAa,EAAEF,MAAM,CAACE,aAAa;MACnCC,KAAK,EAAErB,aAAa,CAACkB,MAAM;IAC/B,CAAC;EACL,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}