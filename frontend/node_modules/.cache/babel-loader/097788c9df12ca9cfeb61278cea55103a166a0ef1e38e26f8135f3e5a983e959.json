{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as PropTypes from \"prop-types\";\nimport { useQuery } from \"../hooks/index.js\";\n/**\n * @deprecated\n * Official support for React Apollo render prop components ended in March 2020.\n * This library is still included in the `@apollo/client` package,\n * but it no longer receives feature updates or bug fixes.\n */\nexport function Query(props) {\n  var children = props.children,\n    query = props.query,\n    options = __rest(props, [\"children\", \"query\"]);\n  var result = useQuery(query, options);\n  return result ? children(result) : null;\n}\nQuery.propTypes = {\n  client: PropTypes.object,\n  children: PropTypes.func.isRequired,\n  fetchPolicy: PropTypes.string,\n  notifyOnNetworkStatusChange: PropTypes.bool,\n  onCompleted: PropTypes.func,\n  onError: PropTypes.func,\n  pollInterval: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  variables: PropTypes.object,\n  ssr: PropTypes.bool,\n  partialRefetch: PropTypes.bool,\n  returnPartialData: PropTypes.bool\n};","map":{"version":3,"names":["PropTypes","useQuery","Query","props","children","query","options","__rest","result","propTypes","client","object","func","isRequired","fetchPolicy","string","notifyOnNetworkStatusChange","bool","onCompleted","onError","pollInterval","number","variables","ssr","partialRefetch","returnPartialData"],"sources":["C:\\xampp\\htdocs\\php_projects\\scandiweb\\frontend\\node_modules\\@apollo\\src\\react\\components\\Query.tsx"],"sourcesContent":["import * as PropTypes from \"prop-types\";\nimport type * as ReactTypes from \"react\";\n\nimport type { OperationVariables } from \"../../core/index.js\";\nimport type { QueryComponentOptions } from \"./types.js\";\nimport { useQuery } from \"../hooks/index.js\";\n\n/**\n * @deprecated\n * Official support for React Apollo render prop components ended in March 2020.\n * This library is still included in the `@apollo/client` package,\n * but it no longer receives feature updates or bug fixes.\n */\nexport function Query<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  props: QueryComponentOptions<TData, TVariables>\n): ReactTypes.JSX.Element | null {\n  const { children, query, ...options } = props;\n  const result = useQuery(query, options);\n  return result ? children(result as any) : null;\n}\n\nexport interface Query<TData, TVariables extends OperationVariables> {\n  propTypes: PropTypes.InferProps<QueryComponentOptions<TData, TVariables>>;\n}\n\nQuery.propTypes = {\n  client: PropTypes.object,\n  children: PropTypes.func.isRequired,\n  fetchPolicy: PropTypes.string,\n  notifyOnNetworkStatusChange: PropTypes.bool,\n  onCompleted: PropTypes.func,\n  onError: PropTypes.func,\n  pollInterval: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  variables: PropTypes.object,\n  ssr: PropTypes.bool,\n  partialRefetch: PropTypes.bool,\n  returnPartialData: PropTypes.bool,\n} as Query<any, any>[\"propTypes\"];\n"],"mappings":";AAAA,OAAO,KAAKA,SAAS,MAAM,YAAY;AAKvC,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C;;;;;;AAMA,OAAM,SAAUC,KAAKA,CAInBC,KAA+C;EAEvC,IAAAC,QAAQ,GAAwBD,KAAK,CAAAC,QAA7B;IAAEC,KAAK,GAAiBF,KAAK,CAAAE,KAAtB;IAAKC,OAAO,GAAAC,MAAA,CAAKJ,KAAK,EAAvC,qBAA+B,CAAF;EACnC,IAAMK,MAAM,GAAGP,QAAQ,CAACI,KAAK,EAAEC,OAAO,CAAC;EACvC,OAAOE,MAAM,GAAGJ,QAAQ,CAACI,MAAa,CAAC,GAAG,IAAI;AAChD;AAMAN,KAAK,CAACO,SAAS,GAAG;EAChBC,MAAM,EAAEV,SAAS,CAACW,MAAM;EACxBP,QAAQ,EAAEJ,SAAS,CAACY,IAAI,CAACC,UAAU;EACnCC,WAAW,EAAEd,SAAS,CAACe,MAAM;EAC7BC,2BAA2B,EAAEhB,SAAS,CAACiB,IAAI;EAC3CC,WAAW,EAAElB,SAAS,CAACY,IAAI;EAC3BO,OAAO,EAAEnB,SAAS,CAACY,IAAI;EACvBQ,YAAY,EAAEpB,SAAS,CAACqB,MAAM;EAC9BhB,KAAK,EAAEL,SAAS,CAACW,MAAM,CAACE,UAAU;EAClCS,SAAS,EAAEtB,SAAS,CAACW,MAAM;EAC3BY,GAAG,EAAEvB,SAAS,CAACiB,IAAI;EACnBO,cAAc,EAAExB,SAAS,CAACiB,IAAI;EAC9BQ,iBAAiB,EAAEzB,SAAS,CAACiB;CACE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}