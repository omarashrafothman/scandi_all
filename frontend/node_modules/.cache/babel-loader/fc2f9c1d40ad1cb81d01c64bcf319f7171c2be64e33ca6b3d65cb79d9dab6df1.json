{"ast":null,"code":"import { parser, DocumentType } from \"../parser/index.js\";\nimport { withQuery } from \"./query-hoc.js\";\nimport { withMutation } from \"./mutation-hoc.js\";\nimport { withSubscription } from \"./subscription-hoc.js\";\n/**\n * @deprecated\n * Official support for React Apollo higher order components ended in March 2020.\n * This library is still included in the `@apollo/client` package, but it no longer receives feature updates or bug fixes.\n */\nexport function graphql(document, operationOptions) {\n  if (operationOptions === void 0) {\n    operationOptions = {};\n  }\n  switch (parser(document).type) {\n    case DocumentType.Mutation:\n      return withMutation(document, operationOptions);\n    case DocumentType.Subscription:\n      return withSubscription(document, operationOptions);\n    case DocumentType.Query:\n    default:\n      return withQuery(document, operationOptions);\n  }\n}","map":{"version":3,"names":["parser","DocumentType","withQuery","withMutation","withSubscription","graphql","document","operationOptions","type","Mutation","Subscription","Query"],"sources":["C:\\laragon\\www\\php_projects\\scandiweb_store\\frontend\\node_modules\\@apollo\\src\\react\\hoc\\graphql.tsx"],"sourcesContent":["import type { DocumentNode } from \"graphql\";\nimport type * as ReactTypes from \"react\";\n\nimport { parser, DocumentType } from \"../parser/index.js\";\nimport { withQuery } from \"./query-hoc.js\";\nimport { withMutation } from \"./mutation-hoc.js\";\nimport { withSubscription } from \"./subscription-hoc.js\";\nimport type { OperationOption, DataProps, MutateProps } from \"./types.js\";\nimport type { OperationVariables } from \"../../core/index.js\";\n\n/**\n * @deprecated\n * Official support for React Apollo higher order components ended in March 2020.\n * This library is still included in the `@apollo/client` package, but it no longer receives feature updates or bug fixes.\n */\nexport function graphql<\n  TProps extends TGraphQLVariables | {} = {},\n  TData extends object = {},\n  TGraphQLVariables extends OperationVariables = {},\n  TChildProps extends object = Partial<DataProps<TData, TGraphQLVariables>> &\n    Partial<MutateProps<TData, TGraphQLVariables>>,\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n): (\n  WrappedComponent: ReactTypes.ComponentType<TProps & TChildProps>\n) => ReactTypes.ComponentClass<TProps> {\n  switch (parser(document).type) {\n    case DocumentType.Mutation:\n      return withMutation(document, operationOptions);\n    case DocumentType.Subscription:\n      return withSubscription(document, operationOptions);\n    case DocumentType.Query:\n    default:\n      return withQuery(document, operationOptions);\n  }\n}\n"],"mappings":"AAGA,SAASA,MAAM,EAAEC,YAAY,QAAQ,oBAAoB;AACzD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,gBAAgB,QAAQ,uBAAuB;AAIxD;;;;;AAKA,OAAM,SAAUC,OAAOA,CAOrBC,QAAsB,EACtBC,gBAKM;EALN,IAAAA,gBAAA;IAAAA,gBAAA,KAKM;EAAA;EAIN,QAAQP,MAAM,CAACM,QAAQ,CAAC,CAACE,IAAI;IAC3B,KAAKP,YAAY,CAACQ,QAAQ;MACxB,OAAON,YAAY,CAACG,QAAQ,EAAEC,gBAAgB,CAAC;IACjD,KAAKN,YAAY,CAACS,YAAY;MAC5B,OAAON,gBAAgB,CAACE,QAAQ,EAAEC,gBAAgB,CAAC;IACrD,KAAKN,YAAY,CAACU,KAAK;IACvB;MACE,OAAOT,SAAS,CAACI,QAAQ,EAAEC,gBAAgB,CAAC;EAChD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}