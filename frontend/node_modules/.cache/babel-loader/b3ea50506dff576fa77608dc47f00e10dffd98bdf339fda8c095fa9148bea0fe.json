{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport { AutoCleanedWeakCache, cacheSizes } from \"../../utilities/index.js\";\nimport { registerGlobalCache } from \"../../utilities/caching/getMemoryInternals.js\";\nexport var DocumentType;\n(function (DocumentType) {\n  DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n  DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n  DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache;\nexport function operationName(type) {\n  var name;\n  switch (type) {\n    case DocumentType.Query:\n      name = \"Query\";\n      break;\n    case DocumentType.Mutation:\n      name = \"Mutation\";\n      break;\n    case DocumentType.Subscription:\n      name = \"Subscription\";\n      break;\n  }\n  return name;\n}\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document) {\n  if (!cache) {\n    cache = new AutoCleanedWeakCache(cacheSizes.parser || 1000 /* defaultCacheSizes.parser */);\n  }\n  var cached = cache.get(document);\n  if (cached) return cached;\n  var variables, type, name;\n  invariant(!!document && !!document.kind, 62, document);\n  var fragments = [];\n  var queries = [];\n  var mutations = [];\n  var subscriptions = [];\n  for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n    var x = _a[_i];\n    if (x.kind === \"FragmentDefinition\") {\n      fragments.push(x);\n      continue;\n    }\n    if (x.kind === \"OperationDefinition\") {\n      switch (x.operation) {\n        case \"query\":\n          queries.push(x);\n          break;\n        case \"mutation\":\n          mutations.push(x);\n          break;\n        case \"subscription\":\n          subscriptions.push(x);\n          break;\n      }\n    }\n  }\n  invariant(!fragments.length || queries.length || mutations.length || subscriptions.length, 63);\n  invariant(queries.length + mutations.length + subscriptions.length <= 1, 64, document, queries.length, subscriptions.length, mutations.length);\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n  var definitions = queries.length ? queries : mutations.length ? mutations : subscriptions;\n  invariant(definitions.length === 1, 65, document, definitions.length);\n  var definition = definitions[0];\n  variables = definition.variableDefinitions || [];\n  if (definition.name && definition.name.kind === \"Name\") {\n    name = definition.name.value;\n  } else {\n    name = \"data\"; // fallback to using data if no name\n  }\n  var payload = {\n    name: name,\n    type: type,\n    variables: variables\n  };\n  cache.set(document, payload);\n  return payload;\n}\nparser.resetCache = function () {\n  cache = undefined;\n};\nif (globalThis.__DEV__ !== false) {\n  registerGlobalCache(\"parser\", function () {\n    return cache ? cache.size : 0;\n  });\n}\nexport function verifyDocumentType(document, type) {\n  var operation = parser(document);\n  var requiredOperationName = operationName(type);\n  var usedOperationName = operationName(operation.type);\n  invariant(operation.type === type, 66, requiredOperationName, requiredOperationName, usedOperationName);\n}","map":{"version":3,"names":["invariant","AutoCleanedWeakCache","cacheSizes","registerGlobalCache","DocumentType","cache","operationName","type","name","Query","Mutation","Subscription","parser","document","cached","get","variables","kind","fragments","queries","mutations","subscriptions","_i","_a","definitions","length","x","push","operation","definition","variableDefinitions","value","payload","set","resetCache","undefined","globalThis","__DEV__","size","verifyDocumentType","requiredOperationName","usedOperationName"],"sources":["C:/laragon/www/php_projects/scandiweb_store/frontend/node_modules/@apollo/client/react/parser/index.js"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport { AutoCleanedWeakCache, cacheSizes, } from \"../../utilities/index.js\";\nimport { registerGlobalCache } from \"../../utilities/caching/getMemoryInternals.js\";\nexport var DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache;\nexport function operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = \"Query\";\n            break;\n        case DocumentType.Mutation:\n            name = \"Mutation\";\n            break;\n        case DocumentType.Subscription:\n            name = \"Subscription\";\n            break;\n    }\n    return name;\n}\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document) {\n    if (!cache) {\n        cache = new AutoCleanedWeakCache(cacheSizes.parser || 1000 /* defaultCacheSizes.parser */);\n    }\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    invariant(!!document && !!document.kind, 62, document);\n    var fragments = [];\n    var queries = [];\n    var mutations = [];\n    var subscriptions = [];\n    for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n        var x = _a[_i];\n        if (x.kind === \"FragmentDefinition\") {\n            fragments.push(x);\n            continue;\n        }\n        if (x.kind === \"OperationDefinition\") {\n            switch (x.operation) {\n                case \"query\":\n                    queries.push(x);\n                    break;\n                case \"mutation\":\n                    mutations.push(x);\n                    break;\n                case \"subscription\":\n                    subscriptions.push(x);\n                    break;\n            }\n        }\n    }\n    invariant(!fragments.length ||\n        queries.length ||\n        mutations.length ||\n        subscriptions.length, 63);\n    invariant(\n        queries.length + mutations.length + subscriptions.length <= 1,\n        64,\n        document,\n        queries.length,\n        subscriptions.length,\n        mutations.length\n    );\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length ? queries\n        : mutations.length ? mutations\n            : subscriptions;\n    invariant(definitions.length === 1, 65, document, definitions.length);\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === \"Name\") {\n        name = definition.name.value;\n    }\n    else {\n        name = \"data\"; // fallback to using data if no name\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\nparser.resetCache = function () {\n    cache = undefined;\n};\nif (globalThis.__DEV__ !== false) {\n    registerGlobalCache(\"parser\", function () { return (cache ? cache.size : 0); });\n}\nexport function verifyDocumentType(document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    invariant(\n        operation.type === type,\n        66,\n        requiredOperationName,\n        requiredOperationName,\n        usedOperationName\n    );\n}\n//# sourceMappingURL=index.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}