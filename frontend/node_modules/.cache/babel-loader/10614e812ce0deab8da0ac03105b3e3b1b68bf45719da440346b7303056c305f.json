{"ast":null,"code":"var _jsxFileName = \"F:\\\\scandiweb\\\\frontend\\\\src\\\\pages\\\\category\\\\CategoryPage.jsx\";\nimport React, { Component } from 'react';\nimport ProductBox from '../../components/product/ProductBox';\nimport response from \"../../locals/products.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CategoryPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      param: window.location.pathname.split(\"/\")[2],\n      // Extract the category from the URL\n      products: response.data.products,\n      // Store all products in the state\n      filteredProducts: [] // To store the filtered products\n    };\n    this.filterCategoryByName = categoryName => {\n      if (categoryName === \"all\") {\n        this.setState({\n          filteredProducts: this.state.products\n        });\n      } else {\n        const filteredProducts = this.state.products.filter(product => product.category === categoryName);\n        this.setState({\n          filteredProducts\n        });\n      }\n    };\n  }\n  componentDidMount() {\n    // Filter products when the component is mounted, based on the URL parameter\n    this.filterCategoryByName(this.state.param);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Check if the param has changed (in case of route change) and re-filter\n    if (prevState.param !== this.state.param) {\n      this.filterCategoryByName(this.state.param);\n    }\n  }\n  render() {\n    const {\n      param,\n      filteredProducts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoryPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: param\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-lg-4\",\n            children: /*#__PURE__*/_jsxDEV(ProductBox, {\n              name: product.name,\n              image: product.gallery[0],\n              price: product.prices[0].amount,\n              id: product.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default CategoryPage;","map":{"version":3,"names":["React","Component","ProductBox","response","jsxDEV","_jsxDEV","CategoryPage","constructor","args","state","param","window","location","pathname","split","products","data","filteredProducts","filterCategoryByName","categoryName","setState","filter","product","category","componentDidMount","componentDidUpdate","prevProps","prevState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","image","gallery","price","prices","amount","id"],"sources":["F:/scandiweb/frontend/src/pages/category/CategoryPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ProductBox from '../../components/product/ProductBox';\r\nimport response from \"../../locals/products.json\";\r\n\r\nclass CategoryPage extends Component {\r\n    state = {\r\n        param: window.location.pathname.split(\"/\")[2], // Extract the category from the URL\r\n        products: response.data.products, // Store all products in the state\r\n        filteredProducts: [] // To store the filtered products\r\n    }\r\n\r\n\r\n    filterCategoryByName = (categoryName) => {\r\n        if (categoryName === \"all\") {\r\n\r\n            this.setState({ filteredProducts: this.state.products });\r\n        } else {\r\n\r\n            const filteredProducts = this.state.products.filter(product =>\r\n                product.category === categoryName\r\n            );\r\n            this.setState({ filteredProducts });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Filter products when the component is mounted, based on the URL parameter\r\n        this.filterCategoryByName(this.state.param);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // Check if the param has changed (in case of route change) and re-filter\r\n        if (prevState.param !== this.state.param) {\r\n            this.filterCategoryByName(this.state.param);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { param, filteredProducts } = this.state;\r\n\r\n        return (\r\n            <div className='categoryPage'>\r\n                <div className='container py-5'>\r\n                    <h2>{param}</h2>\r\n                    <div className='row'>\r\n\r\n                        {filteredProducts.map((product) => (\r\n                            <div className='col-12 col-lg-4' key={product.id}>\r\n                                <ProductBox\r\n                                    name={product.name}\r\n                                    image={product.gallery[0]}\r\n                                    price={product.prices[0].amount}\r\n                                    id={product.id}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,QAAQ,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,SAASL,SAAS,CAAC;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACjCC,KAAK,GAAG;MACJC,KAAK,EAAEC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAAE;MAC/CC,QAAQ,EAAEZ,QAAQ,CAACa,IAAI,CAACD,QAAQ;MAAE;MAClCE,gBAAgB,EAAE,EAAE,CAAC;IACzB,CAAC;IAAA,KAGDC,oBAAoB,GAAIC,YAAY,IAAK;MACrC,IAAIA,YAAY,KAAK,KAAK,EAAE;QAExB,IAAI,CAACC,QAAQ,CAAC;UAAEH,gBAAgB,EAAE,IAAI,CAACR,KAAK,CAACM;QAAS,CAAC,CAAC;MAC5D,CAAC,MAAM;QAEH,MAAME,gBAAgB,GAAG,IAAI,CAACR,KAAK,CAACM,QAAQ,CAACM,MAAM,CAACC,OAAO,IACvDA,OAAO,CAACC,QAAQ,KAAKJ,YACzB,CAAC;QACD,IAAI,CAACC,QAAQ,CAAC;UAAEH;QAAiB,CAAC,CAAC;MACvC;IACJ,CAAC;EAAA;EAEDO,iBAAiBA,CAAA,EAAG;IAChB;IACA,IAAI,CAACN,oBAAoB,CAAC,IAAI,CAACT,KAAK,CAACC,KAAK,CAAC;EAC/C;EAEAe,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IACrC;IACA,IAAIA,SAAS,CAACjB,KAAK,KAAK,IAAI,CAACD,KAAK,CAACC,KAAK,EAAE;MACtC,IAAI,CAACQ,oBAAoB,CAAC,IAAI,CAACT,KAAK,CAACC,KAAK,CAAC;IAC/C;EACJ;EAEAkB,MAAMA,CAAA,EAAG;IACL,MAAM;MAAElB,KAAK;MAAEO;IAAiB,CAAC,GAAG,IAAI,CAACR,KAAK;IAE9C,oBACIJ,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,eACzBzB,OAAA;QAAKwB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BzB,OAAA;UAAAyB,QAAA,EAAKpB;QAAK;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChB7B,OAAA;UAAKwB,SAAS,EAAC,KAAK;UAAAC,QAAA,EAEfb,gBAAgB,CAACkB,GAAG,CAAEb,OAAO,iBAC1BjB,OAAA;YAAKwB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC5BzB,OAAA,CAACH,UAAU;cACPkC,IAAI,EAAEd,OAAO,CAACc,IAAK;cACnBC,KAAK,EAAEf,OAAO,CAACgB,OAAO,CAAC,CAAC,CAAE;cAC1BC,KAAK,EAAEjB,OAAO,CAACkB,MAAM,CAAC,CAAC,CAAC,CAACC,MAAO;cAChCC,EAAE,EAAEpB,OAAO,CAACoB;YAAG;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UAAC,GANgCZ,OAAO,CAACoB,EAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAO3C,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ;AAEA,eAAe5B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}