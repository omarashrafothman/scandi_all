{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\php_projects\\\\scandiweb_store\\\\frontend\\\\src\\\\components\\\\cart\\\\Cart.jsx\";\nimport React, { Component } from 'react';\nimport cart from \"../../assets/images/shopping-cart.png\";\nimport { CartContext } from '../../context/CartContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.incrementQuantity = cartItemId => {\n      const {\n        cartElements,\n        updateCart\n      } = this.context;\n      const updatedCart = cartElements.map(item => {\n        if (item.id === cartItemId) {\n          return {\n            ...item,\n            quantity: item.quantity + 1\n          };\n        }\n        return item;\n      });\n      updateCart(updatedCart);\n    };\n    this.decrementQuantity = async cartItemId => {\n      const {\n        cartElements,\n        updateCart\n      } = this.context;\n      const updatedCart = cartElements.map(item => {\n        if (item.id === cartItemId) {\n          const newQuantity = item.quantity - 1;\n          if (newQuantity >= 0) {\n            return {\n              ...item,\n              quantity: newQuantity\n            };\n          }\n        }\n        return item;\n      }).filter(item => item.quantity > 0); // إزالة العناصر التي لها كمية 0\n\n      updateCart(updatedCart);\n      const cartItem = cartElements.find(item => item.id === cartItemId);\n      if (cartItem && cartItem.quantity === 1) {\n        await this.removeFromCartMutation(cartItem.sku_id);\n      }\n    };\n    this.removeFromCartMutation = async sku_id => {\n      try {\n        const response = await fetch('http://localhost/php_projects/scandiweb_store/backend/index.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query: `\n                  mutation {\n                    removeFromCart(sku_id: ${sku_id}) {\n                      id\n                    }\n                  }\n                `\n          })\n        });\n        const result = await response.json();\n        if (result.errors) {\n          console.error(\"Error removing item from cart\", result.errors);\n        }\n      } catch (error) {\n        console.error(\"Network error while removing item from cart\", error);\n      }\n    };\n    this.calculateTotalPrice = cartItem => {\n      return cartItem.quantity * cartItem.product.prices[0].amount;\n    };\n    this.calculateTotalCartPrice = () => {\n      const {\n        cartElements\n      } = this.context;\n      return cartElements.reduce((acc, cartItem) => acc + this.calculateTotalPrice(cartItem), 0).toFixed(2);\n    };\n    this.placeOrder = async () => {\n      const {\n        cartElements,\n        clearCart\n      } = this.context;\n      if (cartElements.length === 0) return;\n      const total_price = this.calculateTotalCartPrice();\n      const cart_id = 1;\n      try {\n        const response = await fetch('http://localhost/php_projects/scandiweb_store/backend/index.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query: `mutation {\n                    createOrder(cart_id: ${cart_id}, total_price: ${total_price}, status: \"pending\") {\n                        id\n                    }\n                }`\n          })\n        });\n        const result = await response.json();\n        if (result.errors) {\n          console.error(\"Error creating order\", result.errors);\n          return;\n        }\n        clearCart(); // تفريغ السلة بعد إنشاء الطلب\n        console.log(\"Order created successfully:\", result.data.createOrder.id);\n      } catch (error) {\n        console.error(\"Network error while creating order\", error);\n      }\n    };\n  }\n  render() {\n    const {\n      cartElements\n    } = this.context;\n    console.log(cartElements);\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n}\nCart.contextType = CartContext;","map":{"version":3,"names":["React","Component","cart","CartContext","jsxDEV","_jsxDEV","Cart","constructor","args","incrementQuantity","cartItemId","cartElements","updateCart","context","updatedCart","map","item","id","quantity","decrementQuantity","newQuantity","filter","cartItem","find","removeFromCartMutation","sku_id","response","fetch","method","headers","body","JSON","stringify","query","result","json","errors","console","error","calculateTotalPrice","product","prices","amount","calculateTotalCartPrice","reduce","acc","toFixed","placeOrder","clearCart","length","total_price","cart_id","log","data","createOrder","render","fileName","_jsxFileName","lineNumber","columnNumber","contextType"],"sources":["C:/laragon/www/php_projects/scandiweb_store/frontend/src/components/cart/Cart.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport cart from \"../../assets/images/shopping-cart.png\";\r\nimport { CartContext } from '../../context/CartContext.js';\r\n\r\nexport default class Cart extends Component {\r\n    static contextType = CartContext;\r\n\r\n    incrementQuantity = (cartItemId) => {\r\n        const { cartElements, updateCart } = this.context;\r\n        const updatedCart = cartElements.map((item) => {\r\n            if (item.id === cartItemId) {\r\n                return {\r\n                    ...item,\r\n                    quantity: item.quantity + 1,\r\n                };\r\n            }\r\n            return item;\r\n        });\r\n        updateCart(updatedCart);\r\n    };\r\n\r\n    decrementQuantity = async (cartItemId) => {\r\n        const { cartElements, updateCart } = this.context;\r\n        const updatedCart = cartElements\r\n            .map((item) => {\r\n                if (item.id === cartItemId) {\r\n                    const newQuantity = item.quantity - 1;\r\n                    if (newQuantity >= 0) {\r\n                        return {\r\n                            ...item,\r\n                            quantity: newQuantity,\r\n                        };\r\n                    }\r\n                }\r\n                return item;\r\n            })\r\n            .filter((item) => item.quantity > 0); // إزالة العناصر التي لها كمية 0\r\n\r\n        updateCart(updatedCart);\r\n\r\n        const cartItem = cartElements.find(item => item.id === cartItemId);\r\n        if (cartItem && cartItem.quantity === 1) {\r\n            await this.removeFromCartMutation(cartItem.sku_id);\r\n        }\r\n    };\r\n\r\n    removeFromCartMutation = async (sku_id) => {\r\n        try {\r\n            const response = await fetch('http://localhost/php_projects/scandiweb_store/backend/index.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    query: `\r\n                  mutation {\r\n                    removeFromCart(sku_id: ${sku_id}) {\r\n                      id\r\n                    }\r\n                  }\r\n                `,\r\n                }),\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (result.errors) {\r\n                console.error(\"Error removing item from cart\", result.errors);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Network error while removing item from cart\", error);\r\n        }\r\n    };\r\n\r\n    calculateTotalPrice = (cartItem) => {\r\n        return cartItem.quantity * cartItem.product.prices[0].amount;\r\n    };\r\n\r\n    calculateTotalCartPrice = () => {\r\n        const { cartElements } = this.context;\r\n        return cartElements.reduce(\r\n            (acc, cartItem) => acc + this.calculateTotalPrice(cartItem),\r\n            0\r\n        ).toFixed(2);\r\n    };\r\n\r\n    placeOrder = async () => {\r\n        const { cartElements, clearCart } = this.context;\r\n        if (cartElements.length === 0) return;\r\n\r\n        const total_price = this.calculateTotalCartPrice();\r\n        const cart_id = 1;\r\n\r\n        try {\r\n            const response = await fetch('http://localhost/php_projects/scandiweb_store/backend/index.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    query: `mutation {\r\n                    createOrder(cart_id: ${cart_id}, total_price: ${total_price}, status: \"pending\") {\r\n                        id\r\n                    }\r\n                }`,\r\n                }),\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (result.errors) {\r\n                console.error(\"Error creating order\", result.errors);\r\n                return;\r\n            }\r\n\r\n            clearCart(); // تفريغ السلة بعد إنشاء الطلب\r\n            console.log(\"Order created successfully:\", result.data.createOrder.id);\r\n        } catch (error) {\r\n            console.error(\"Network error while creating order\", error);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { cartElements } = this.context;\r\n        console.log(cartElements)\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}