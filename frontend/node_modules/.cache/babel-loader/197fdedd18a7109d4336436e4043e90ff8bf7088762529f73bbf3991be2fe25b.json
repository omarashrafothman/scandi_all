{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\php_projects\\\\scandiweb_store\\\\frontend\\\\src\\\\pages\\\\category\\\\CategoryPage.jsx\";\nimport React, { Component } from 'react';\nimport ProductBox from '../../components/product/ProductBox';\nimport { gql } from '@apollo/client';\nimport { Query } from '@apollo/client/react/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL_PRODUCTS_WITH_CATEGORIES = gql`\n    query GetAllProductsWithCategories {\n         products {\n            category{\n            id\n                name\n            }\n    id\n    name\n    price\n  \n    galleries {\n      product_id\n      image_url\n    }\n  }\n    }\n`;\nclass CategoryPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categoryName: null\n    };\n  }\n  componentDidMount() {\n    // Extract the category name from the URL (assuming it's the third segment)\n    const categoryName = window.location.pathname.split(\"/\")[2];\n    this.setState({\n      categoryName\n    });\n  }\n  render() {\n    const {\n      categoryName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoryPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: categoryName ? `${categoryName}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Query, {\n          query: GET_ALL_PRODUCTS_WITH_CATEGORIES,\n          children: ({\n            loading,\n            error,\n            data\n          }) => {\n            if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 49\n            }, this);\n            if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Error: \", error.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 47\n            }, this);\n            this.setState(data.products.category);\n            if (categoryName.toLowerCase() === 'all') {\n              const allProducts = data.products;\n              if (allProducts.length > 0) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: allProducts.map(product => {\n                    var _product$galleries$;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-12 col-lg-4\",\n                      children: /*#__PURE__*/_jsxDEV(ProductBox, {\n                        name: product.name,\n                        image: (_product$galleries$ = product.galleries[0]) === null || _product$galleries$ === void 0 ? void 0 : _product$galleries$.image_url,\n                        price: product.price,\n                        id: product.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 60,\n                        columnNumber: 53\n                      }, this)\n                    }, product.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 41\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No products found in all categories.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 44\n                }, this);\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default CategoryPage;\n{/*\r\n    \r\n    \r\n {\r\n    categoryName && (\r\n        <Query query={GET_ALL_PRODUCTS_WITH_CATEGORIES}>\r\n            {({ loading, error, data }) => {\r\n                if (loading) return <p>Loading...</p>;\r\n                if (error) return <p>Error: {error.message}</p>;\r\n \n                // If categoryName is 'all', show products from all categories\r\n                if (categoryName.toLowerCase() === 'all') {\r\n                    const allProducts = data.products;\r\n                    console.log(allProducts)\r\n \n                    if (allProducts.length > 0) {\r\n                        return (\r\n                            <div className='row'>\r\n                                {allProducts.map((product) => (\r\n                                    <div className='col-12 col-lg-4' key={product.id}>\r\n                                        <ProductBox\r\n                                            name={product.name}\r\n                                            image={product.galleries[0]?.image_url || 'default-image-url'}\r\n                                            price={product.price}\r\n                                            id={product.id}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    } else {\r\n                        return <p>No products found in all categories.</p>;\r\n                    }\r\n                }\r\n \n                // Find products that belong to the specific category that matches the categoryName from the URL\r\n                const filteredProducts = data.products.filter(product => product.category?.name.toLowerCase() === categoryName.toLowerCase());\r\n \n                if (filteredProducts.length > 0) {\r\n                    return (\r\n                        <div className='row'>\r\n                            {filteredProducts.map((product) => (\r\n                                <div className='col-12 col-lg-4' key={product.id}>\r\n                                    <ProductBox\r\n                                        name={product.name}\r\n                                        image={product.galleries[0]?.image_url || 'default-image-url'}\r\n                                        price={product.price}\r\n                                        id={product.id}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return <p>No products found in this category.</p>;\r\n                }\r\n            }}\r\n        </Query>\r\n    )\r\n }\r\n    \r\n    */}","map":{"version":3,"names":["React","Component","ProductBox","gql","Query","jsxDEV","_jsxDEV","GET_ALL_PRODUCTS_WITH_CATEGORIES","CategoryPage","constructor","args","state","categoryName","componentDidMount","window","location","pathname","split","setState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","query","loading","error","data","message","products","category","toLowerCase","allProducts","length","map","product","_product$galleries$","name","image","galleries","image_url","price","id"],"sources":["C:/laragon/www/php_projects/scandiweb_store/frontend/src/pages/category/CategoryPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ProductBox from '../../components/product/ProductBox';\r\nimport { gql } from '@apollo/client';\r\nimport { Query } from '@apollo/client/react/components';\r\n\r\nconst GET_ALL_PRODUCTS_WITH_CATEGORIES = gql`\r\n    query GetAllProductsWithCategories {\r\n         products {\r\n            category{\r\n            id\r\n                name\r\n            }\r\n    id\r\n    name\r\n    price\r\n  \r\n    galleries {\r\n      product_id\r\n      image_url\r\n    }\r\n  }\r\n    }\r\n`;\r\n\r\nclass CategoryPage extends Component {\r\n    state = {\r\n        categoryName: null,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Extract the category name from the URL (assuming it's the third segment)\r\n        const categoryName = window.location.pathname.split(\"/\")[2];\r\n        this.setState({ categoryName });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { categoryName } = this.state;\r\n\r\n        return (\r\n            <div className='categoryPage'>\r\n                <div className='container py-5'>\r\n                    <h2>{categoryName ? `${categoryName}` : 'Loading...'}</h2>\r\n\r\n                    <Query query={GET_ALL_PRODUCTS_WITH_CATEGORIES}>\r\n                        {({ loading, error, data }) => {\r\n                            if (loading) return <p>Loading...</p>;\r\n                            if (error) return <p>Error: {error.message}</p>;\r\n\r\n\r\n                            this.setState(data.products.category)\r\n                            if (categoryName.toLowerCase() === 'all') {\r\n                                const allProducts = data.products;\r\n                                if (allProducts.length > 0) {\r\n                                    return (\r\n                                        <div className='row'>\r\n                                            {allProducts.map((product) => (\r\n                                                <div className='col-12 col-lg-4' key={product.id}>\r\n                                                    <ProductBox\r\n                                                        name={product.name}\r\n                                                        image={product.galleries[0]?.image_url}\r\n                                                        price={product.price}\r\n                                                        id={product.id}\r\n                                                    />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    );\r\n                                } else {\r\n                                    return <p>No products found in all categories.</p>;\r\n                                }\r\n\r\n\r\n                            }\r\n\r\n                        }}\r\n                    </Query>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryPage;\r\n\r\n{/*\r\n    \r\n    \r\n{\r\n    categoryName && (\r\n        <Query query={GET_ALL_PRODUCTS_WITH_CATEGORIES}>\r\n            {({ loading, error, data }) => {\r\n                if (loading) return <p>Loading...</p>;\r\n                if (error) return <p>Error: {error.message}</p>;\r\n\r\n                // If categoryName is 'all', show products from all categories\r\n                if (categoryName.toLowerCase() === 'all') {\r\n                    const allProducts = data.products;\r\n                    console.log(allProducts)\r\n\r\n                    if (allProducts.length > 0) {\r\n                        return (\r\n                            <div className='row'>\r\n                                {allProducts.map((product) => (\r\n                                    <div className='col-12 col-lg-4' key={product.id}>\r\n                                        <ProductBox\r\n                                            name={product.name}\r\n                                            image={product.galleries[0]?.image_url || 'default-image-url'}\r\n                                            price={product.price}\r\n                                            id={product.id}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    } else {\r\n                        return <p>No products found in all categories.</p>;\r\n                    }\r\n                }\r\n\r\n                // Find products that belong to the specific category that matches the categoryName from the URL\r\n                const filteredProducts = data.products.filter(product => product.category?.name.toLowerCase() === categoryName.toLowerCase());\r\n\r\n                if (filteredProducts.length > 0) {\r\n                    return (\r\n                        <div className='row'>\r\n                            {filteredProducts.map((product) => (\r\n                                <div className='col-12 col-lg-4' key={product.id}>\r\n                                    <ProductBox\r\n                                        name={product.name}\r\n                                        image={product.galleries[0]?.image_url || 'default-image-url'}\r\n                                        price={product.price}\r\n                                        id={product.id}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return <p>No products found in this category.</p>;\r\n                }\r\n            }}\r\n        </Query>\r\n    )\r\n}\r\n    \r\n    */}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}