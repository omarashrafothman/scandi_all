{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\php_projects\\\\scandiweb\\\\frontend\\\\src\\\\pages\\\\category\\\\CategoryPage.jsx\";\nimport React, { Component } from 'react';\nimport ProductBox from '../../components/product/ProductBox';\nimport { gql } from '@apollo/client';\nimport { Query } from '@apollo/client/react/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_CATEGORY_PRODUCTS = gql`\n    query GetCategoryProducts($categoryName: String!) {\n        category(name: $categoryName) {\n            id\n            name\n            products {\n                id\n                name\n                price\n                galleries {\n                    image_url\n                }\n            }\n        }\n    }\n`;\nclass CategoryPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      param: window.location.pathname.split(\"/\")[2] // Extract the category from the URL\n    };\n  }\n  render() {\n    const {\n      param\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoryPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: param\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Query, {\n          query: GET_CATEGORY_PRODUCTS,\n          variables: {\n            categoryName: param\n          },\n          children: ({\n            loading,\n            error,\n            data\n          }) => {\n            if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 49\n            }, this);\n            if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Error: \", error.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 47\n            }, this);\n            const {\n              category\n            } = data;\n\n            // Check if the category name matches the parameter\n            if (category && category.name.toLowerCase() === param.toLowerCase()) {\n              const products = category.products;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-12 col-lg-4\",\n                  children: /*#__PURE__*/_jsxDEV(ProductBox, {\n                    name: product.name,\n                    image: product.galleries[0].image_url,\n                    price: product.price,\n                    id: product.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 49\n                  }, this)\n                }, product.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No products found in this category.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 40\n              }, this);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default CategoryPage;","map":{"version":3,"names":["React","Component","ProductBox","gql","Query","jsxDEV","_jsxDEV","GET_CATEGORY_PRODUCTS","CategoryPage","constructor","args","state","param","window","location","pathname","split","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","query","variables","categoryName","loading","error","data","message","category","name","toLowerCase","products","map","product","image","galleries","image_url","price","id"],"sources":["C:/xampp/htdocs/php_projects/scandiweb/frontend/src/pages/category/CategoryPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ProductBox from '../../components/product/ProductBox';\r\nimport { gql } from '@apollo/client';\r\nimport { Query } from '@apollo/client/react/components';\r\n\r\nconst GET_CATEGORY_PRODUCTS = gql`\r\n    query GetCategoryProducts($categoryName: String!) {\r\n        category(name: $categoryName) {\r\n            id\r\n            name\r\n            products {\r\n                id\r\n                name\r\n                price\r\n                galleries {\r\n                    image_url\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass CategoryPage extends Component {\r\n    state = {\r\n        param: window.location.pathname.split(\"/\")[2], // Extract the category from the URL\r\n    };\r\n\r\n    render() {\r\n        const { param } = this.state;\r\n\r\n        return (\r\n            <div className='categoryPage'>\r\n                <div className='container py-5'>\r\n                    <h2>{param}</h2>\r\n                    <Query query={GET_CATEGORY_PRODUCTS} variables={{ categoryName: param }}>\r\n                        {({ loading, error, data }) => {\r\n                            if (loading) return <p>Loading...</p>;\r\n                            if (error) return <p>Error: {error.message}</p>;\r\n\r\n                            const { category } = data;\r\n\r\n                            // Check if the category name matches the parameter\r\n                            if (category && category.name.toLowerCase() === param.toLowerCase()) {\r\n                                const products = category.products;\r\n                                return (\r\n                                    <div className='row'>\r\n                                        {products.map((product) => (\r\n                                            <div className='col-12 col-lg-4' key={product.id}>\r\n                                                <ProductBox\r\n                                                    name={product.name}\r\n                                                    image={product.galleries[0].image_url}\r\n                                                    price={product.price}\r\n                                                    id={product.id}\r\n                                                />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                );\r\n                            } else {\r\n                                return <p>No products found in this category.</p>;\r\n                            }\r\n                        }}\r\n                    </Query>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}