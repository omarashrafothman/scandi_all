{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\php_projects\\\\scandiweb\\\\frontend\\\\src\\\\pages\\\\category\\\\CategoryPage.jsx\";\nimport React, { Component } from 'react';\nimport ProductBox from '../../components/product/ProductBox';\nimport { gql } from '@apollo/client';\nimport { Query } from '@apollo/client/react/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL_CATEGORIES = gql`\n    query GetAllCategories {\n        categories {\n            id\n            name\n            products {\n                id\n                name\n                price\n                galleries {\n                    image_url\n                }\n            }\n        }\n    }\n`;\nclass CategoryPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categoryName: null\n    };\n  }\n  componentDidMount() {\n    // Extract the category name from the URL (assuming it's the third segment)\n    const categoryName = window.location.pathname.split(\"/\")[2];\n    this.setState({\n      categoryName\n    });\n  }\n  render() {\n    const {\n      categoryName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoryPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: categoryName ? `Category: ${categoryName}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), categoryName && /*#__PURE__*/_jsxDEV(Query, {\n          query: GET_ALL_CATEGORIES,\n          children: ({\n            loading,\n            error,\n            data\n          }) => {\n            if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 53\n            }, this);\n            if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Error: \", error.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 51\n            }, this);\n\n            // Find the category that matches the categoryName from the URL\n            const category = data.categories.find(cat => cat.name.toLowerCase() === categoryName.toLowerCase());\n            console.log(category.products);\n            if (category && category.products.length > 0) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: category.products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-12 col-lg-4\",\n                  children: /*#__PURE__*/_jsxDEV(ProductBox, {\n                    name: product.name,\n                    image: product.image_url,\n                    price: product.price[0],\n                    id: product.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 53\n                  }, this)\n                }, product.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No products found in this category.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 44\n              }, this);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default CategoryPage;","map":{"version":3,"names":["React","Component","ProductBox","gql","Query","jsxDEV","_jsxDEV","GET_ALL_CATEGORIES","CategoryPage","constructor","args","state","categoryName","componentDidMount","window","location","pathname","split","setState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","query","loading","error","data","message","category","categories","find","cat","name","toLowerCase","console","log","products","length","map","product","image","image_url","price","id"],"sources":["C:/xampp/htdocs/php_projects/scandiweb/frontend/src/pages/category/CategoryPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ProductBox from '../../components/product/ProductBox';\r\nimport { gql } from '@apollo/client';\r\nimport { Query } from '@apollo/client/react/components';\r\n\r\nconst GET_ALL_CATEGORIES = gql`\r\n    query GetAllCategories {\r\n        categories {\r\n            id\r\n            name\r\n            products {\r\n                id\r\n                name\r\n                price\r\n                galleries {\r\n                    image_url\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nclass CategoryPage extends Component {\r\n    state = {\r\n        categoryName: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Extract the category name from the URL (assuming it's the third segment)\r\n        const categoryName = window.location.pathname.split(\"/\")[2];\r\n        this.setState({ categoryName });\r\n    }\r\n\r\n    render() {\r\n        const { categoryName } = this.state;\r\n\r\n        return (\r\n            <div className='categoryPage'>\r\n                <div className='container py-5'>\r\n                    <h2>{categoryName ? `Category: ${categoryName}` : 'Loading...'}</h2>\r\n                    {categoryName && (\r\n                        <Query query={GET_ALL_CATEGORIES}>\r\n                            {({ loading, error, data }) => {\r\n                                if (loading) return <p>Loading...</p>;\r\n                                if (error) return <p>Error: {error.message}</p>;\r\n\r\n\r\n                                // Find the category that matches the categoryName from the URL\r\n                                const category = data.categories.find(cat => cat.name.toLowerCase() === categoryName.toLowerCase());\r\n                                console.log(category.products)\r\n                                if (category && category.products.length > 0) {\r\n                                    return (\r\n                                        <div className='row'>\r\n                                            {category.products.map((product) => (\r\n                                                <div className='col-12 col-lg-4' key={product.id}>\r\n                                                    <ProductBox\r\n                                                        name={product.name}\r\n                                                        image={product.image_url}\r\n                                                        price={product.price[0]}\r\n                                                        id={product.id}\r\n                                                    />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    );\r\n                                } else {\r\n                                    return <p>No products found in this category.</p>;\r\n                                }\r\n                            }}\r\n                        </Query>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}