{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from \"rehackt\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { parser } from \"../parser/index.js\";\nimport { Subscription } from \"../components/index.js\";\nimport { getDisplayName, GraphQLBase, calculateVariablesFromProps, defaultMapPropsToOptions, defaultMapPropsToSkip } from \"./hoc-utils.js\";\n/**\n * @deprecated\n * Official support for React Apollo higher order components ended in March 2020.\n * This library is still included in the `@apollo/client` package, but it no longer receives feature updates or bug fixes.\n */\nexport function withSubscription(document, operationOptions) {\n  if (operationOptions === void 0) {\n    operationOptions = {};\n  }\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  var operation = parser(document);\n  // extract options\n  var _a = operationOptions.options,\n    options = _a === void 0 ? defaultMapPropsToOptions : _a,\n    _b = operationOptions.skip,\n    skip = _b === void 0 ? defaultMapPropsToSkip : _b,\n    _c = operationOptions.alias,\n    alias = _c === void 0 ? \"Apollo\" : _c,\n    shouldResubscribe = operationOptions.shouldResubscribe;\n  var mapPropsToOptions = options;\n  if (typeof mapPropsToOptions !== \"function\") mapPropsToOptions = function () {\n    return options;\n  };\n  var mapPropsToSkip = skip;\n  if (typeof mapPropsToSkip !== \"function\") mapPropsToSkip = function () {\n    return skip;\n  };\n  // allow for advanced referential equality checks\n  var lastResultProps;\n  return function (WrappedComponent) {\n    var graphQLDisplayName = \"\".concat(alias, \"(\").concat(getDisplayName(WrappedComponent), \")\");\n    var GraphQL = /** @class */function (_super) {\n      __extends(GraphQL, _super);\n      function GraphQL(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n          resubscribe: false\n        };\n        return _this;\n      }\n      GraphQL.prototype.updateResubscribe = function (resubscribe) {\n        this.setState({\n          resubscribe: resubscribe\n        });\n      };\n      GraphQL.prototype.componentDidUpdate = function (prevProps) {\n        var resubscribe = !!(shouldResubscribe && shouldResubscribe(prevProps, this.props));\n        if (this.state.resubscribe !== resubscribe) {\n          this.updateResubscribe(resubscribe);\n        }\n      };\n      GraphQL.prototype.render = function () {\n        var _this = this;\n        var props = this.props;\n        var shouldSkip = mapPropsToSkip(props);\n        var opts = shouldSkip ? Object.create(null) : mapPropsToOptions(props);\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n        return React.createElement(Subscription, __assign({}, opts, {\n          displayName: graphQLDisplayName,\n          skip: shouldSkip,\n          subscription: document,\n          shouldResubscribe: this.state.resubscribe\n        }), function (_a) {\n          var _b, _c;\n          var data = _a.data,\n            r = __rest(_a, [\"data\"]);\n          if (operationOptions.withRef) {\n            _this.withRef = true;\n            props = Object.assign({}, props, {\n              ref: _this.setWrappedInstance\n            });\n          }\n          // if we have skipped, no reason to manage any reshaping\n          if (shouldSkip) {\n            return React.createElement(WrappedComponent, __assign({}, props, {}));\n          }\n          // the HOC's historically hoisted the data from the execution result\n          // up onto the result since it was passed as a nested prop\n          // we massage the Query components shape here to replicate that\n          var result = Object.assign(r, data || {});\n          var name = operationOptions.name || \"data\";\n          var childProps = (_b = {}, _b[name] = result, _b);\n          if (operationOptions.props) {\n            var newResult = (_c = {}, _c[name] = result, _c.ownProps = props, _c);\n            lastResultProps = operationOptions.props(newResult, lastResultProps);\n            childProps = lastResultProps;\n          }\n          return React.createElement(WrappedComponent, __assign({}, props, childProps));\n        });\n      };\n      GraphQL.displayName = graphQLDisplayName;\n      GraphQL.WrappedComponent = WrappedComponent;\n      return GraphQL;\n    }(GraphQLBase);\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}","map":{"version":3,"names":["React","hoistNonReactStatics","parser","Subscription","getDisplayName","GraphQLBase","calculateVariablesFromProps","defaultMapPropsToOptions","defaultMapPropsToSkip","withSubscription","document","operationOptions","operation","_a","options","_b","skip","_c","alias","shouldResubscribe","mapPropsToOptions","mapPropsToSkip","lastResultProps","WrappedComponent","graphQLDisplayName","concat","GraphQL","_super","__extends","props","_this","call","state","resubscribe","prototype","updateResubscribe","setState","componentDidUpdate","prevProps","render","shouldSkip","opts","Object","create","variables","length","createElement","__assign","displayName","subscription","data","r","__rest","withRef","assign","ref","setWrappedInstance","result","name","childProps","newResult","ownProps"],"sources":["C:\\laragon\\www\\php_projects\\scandiweb_store\\frontend\\node_modules\\@apollo\\src\\react\\hoc\\subscription-hoc.tsx"],"sourcesContent":["import * as React from \"rehackt\";\nimport type * as ReactTypes from \"react\";\nimport type { DocumentNode } from \"graphql\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\nimport { parser } from \"../parser/index.js\";\nimport type { BaseQueryOptions } from \"../types/types.js\";\nimport { Subscription } from \"../components/index.js\";\nimport {\n  getDisplayName,\n  GraphQLBase,\n  calculateVariablesFromProps,\n  defaultMapPropsToOptions,\n  defaultMapPropsToSkip,\n} from \"./hoc-utils.js\";\nimport type { OperationOption, OptionProps, DataProps } from \"./types.js\";\n\n/**\n * @deprecated\n * Official support for React Apollo higher order components ended in March 2020.\n * This library is still included in the `@apollo/client` package, but it no longer receives feature updates or bug fixes.\n */\nexport function withSubscription<\n  TProps extends TGraphQLVariables | {} = {},\n  TData extends object = {},\n  TGraphQLVariables extends object = {},\n  TChildProps extends object = DataProps<TData, TGraphQLVariables>,\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  const operation = parser(document);\n  // extract options\n  const {\n    options = defaultMapPropsToOptions,\n    skip = defaultMapPropsToSkip,\n    alias = \"Apollo\",\n    shouldResubscribe,\n  } = operationOptions;\n\n  let mapPropsToOptions = options as (props: any) => BaseQueryOptions;\n  if (typeof mapPropsToOptions !== \"function\")\n    mapPropsToOptions = () => options as BaseQueryOptions;\n\n  let mapPropsToSkip = skip as (props: any) => boolean;\n  if (typeof mapPropsToSkip !== \"function\") mapPropsToSkip = () => skip as any;\n\n  // allow for advanced referential equality checks\n  let lastResultProps: TChildProps | void;\n  return (\n    WrappedComponent: ReactTypes.ComponentType<TProps & TChildProps>\n  ): ReactTypes.ComponentClass<TProps> => {\n    const graphQLDisplayName = `${alias}(${getDisplayName(WrappedComponent)})`;\n    class GraphQL extends GraphQLBase<\n      TProps,\n      TChildProps,\n      { resubscribe: boolean }\n    > {\n      static displayName = graphQLDisplayName;\n      static WrappedComponent = WrappedComponent;\n      constructor(props: TProps) {\n        super(props);\n        this.state = { resubscribe: false };\n      }\n\n      updateResubscribe(resubscribe: boolean) {\n        this.setState({ resubscribe });\n      }\n\n      componentDidUpdate(prevProps: TProps) {\n        const resubscribe = !!(\n          shouldResubscribe && shouldResubscribe(prevProps, this.props)\n        );\n        if (this.state.resubscribe !== resubscribe) {\n          this.updateResubscribe(resubscribe);\n        }\n      }\n\n      render() {\n        let props = this.props;\n        const shouldSkip = mapPropsToSkip(props);\n        const opts =\n          shouldSkip ? Object.create(null) : mapPropsToOptions(props);\n\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n        return (\n          <Subscription\n            {...opts}\n            displayName={graphQLDisplayName}\n            skip={shouldSkip}\n            subscription={document}\n            shouldResubscribe={this.state.resubscribe}\n          >\n            {({ data, ...r }: any) => {\n              if (operationOptions.withRef) {\n                this.withRef = true;\n                props = Object.assign({}, props, {\n                  ref: this.setWrappedInstance,\n                });\n              }\n              // if we have skipped, no reason to manage any reshaping\n              if (shouldSkip) {\n                return (\n                  <WrappedComponent\n                    {...(props as TProps)}\n                    {...({} as TChildProps)}\n                  />\n                );\n              }\n\n              // the HOC's historically hoisted the data from the execution result\n              // up onto the result since it was passed as a nested prop\n              // we massage the Query components shape here to replicate that\n              const result = Object.assign(r, data || {});\n              const name = operationOptions.name || \"data\";\n              let childProps = { [name]: result };\n              if (operationOptions.props) {\n                const newResult: OptionProps<TProps, TData, TGraphQLVariables> =\n                  {\n                    [name]: result,\n                    ownProps: props as TProps,\n                  };\n                lastResultProps = operationOptions.props(\n                  newResult,\n                  lastResultProps\n                );\n                childProps = lastResultProps;\n              }\n\n              return (\n                <WrappedComponent\n                  {...(props as TProps)}\n                  {...(childProps as TChildProps)}\n                />\n              );\n            }}\n          </Subscription>\n        );\n      }\n    }\n\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}