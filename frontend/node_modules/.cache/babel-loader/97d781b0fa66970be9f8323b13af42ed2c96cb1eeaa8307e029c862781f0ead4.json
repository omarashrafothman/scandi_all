{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from \"rehackt\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { parser } from \"../parser/index.js\";\nimport { Query } from \"../components/index.js\";\nimport { getDisplayName, GraphQLBase, calculateVariablesFromProps, defaultMapPropsToOptions, defaultMapPropsToSkip } from \"./hoc-utils.js\";\n/**\n * @deprecated\n * Official support for React Apollo higher order components ended in March 2020.\n * This library is still included in the `@apollo/client` package, but it no longer receives feature updates or bug fixes.\n */\nexport function withQuery(document, operationOptions) {\n  if (operationOptions === void 0) {\n    operationOptions = {};\n  }\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  var operation = parser(document);\n  // extract options\n  var _a = operationOptions.options,\n    options = _a === void 0 ? defaultMapPropsToOptions : _a,\n    _b = operationOptions.skip,\n    skip = _b === void 0 ? defaultMapPropsToSkip : _b,\n    _c = operationOptions.alias,\n    alias = _c === void 0 ? \"Apollo\" : _c;\n  var mapPropsToOptions = options;\n  if (typeof mapPropsToOptions !== \"function\") {\n    mapPropsToOptions = function () {\n      return options;\n    };\n  }\n  var mapPropsToSkip = skip;\n  if (typeof mapPropsToSkip !== \"function\") {\n    mapPropsToSkip = function () {\n      return skip;\n    };\n  }\n  // allow for advanced referential equality checks\n  var lastResultProps;\n  return function (WrappedComponent) {\n    var graphQLDisplayName = \"\".concat(alias, \"(\").concat(getDisplayName(WrappedComponent), \")\");\n    var GraphQL = /** @class */function (_super) {\n      __extends(GraphQL, _super);\n      function GraphQL() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n      GraphQL.prototype.render = function () {\n        var _this = this;\n        var props = this.props;\n        var shouldSkip = mapPropsToSkip(props);\n        var opts = shouldSkip ? Object.create(null) : __assign({}, mapPropsToOptions(props));\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n        return React.createElement(Query, __assign({}, opts, {\n          displayName: graphQLDisplayName,\n          skip: shouldSkip,\n          query: document\n        }), function (_a) {\n          var _b, _c;\n          var _ = _a.client,\n            data = _a.data,\n            r = __rest(_a, [\"client\", \"data\"]);\n          if (operationOptions.withRef) {\n            _this.withRef = true;\n            props = Object.assign({}, props, {\n              ref: _this.setWrappedInstance\n            });\n          }\n          // if we have skipped, no reason to manage any reshaping\n          if (shouldSkip) {\n            return React.createElement(WrappedComponent, __assign({}, props, {}));\n          }\n          // the HOC's historically hoisted the data from the execution result\n          // up onto the result since it was passed as a nested prop\n          // we massage the Query components shape here to replicate that\n          var result = Object.assign(r, data || {});\n          var name = operationOptions.name || \"data\";\n          var childProps = (_b = {}, _b[name] = result, _b);\n          if (operationOptions.props) {\n            var newResult = (_c = {}, _c[name] = result, _c.ownProps = props, _c);\n            lastResultProps = operationOptions.props(newResult, lastResultProps);\n            childProps = lastResultProps;\n          }\n          return React.createElement(WrappedComponent, __assign({}, props, childProps));\n        });\n      };\n      GraphQL.displayName = graphQLDisplayName;\n      GraphQL.WrappedComponent = WrappedComponent;\n      return GraphQL;\n    }(GraphQLBase);\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}","map":{"version":3,"names":["React","hoistNonReactStatics","parser","Query","getDisplayName","GraphQLBase","calculateVariablesFromProps","defaultMapPropsToOptions","defaultMapPropsToSkip","withQuery","document","operationOptions","operation","_a","options","_b","skip","_c","alias","mapPropsToOptions","mapPropsToSkip","lastResultProps","WrappedComponent","graphQLDisplayName","concat","GraphQL","_super","__extends","prototype","render","_this","props","shouldSkip","opts","Object","create","__assign","variables","length","createElement","displayName","query","_","client","data","r","__rest","withRef","assign","ref","setWrappedInstance","result","name","childProps","newResult","ownProps"],"sources":["C:\\laragon\\www\\php_projects\\scandiweb_store\\frontend\\node_modules\\@apollo\\src\\react\\hoc\\query-hoc.tsx"],"sourcesContent":["import * as React from \"rehackt\";\nimport type * as ReactTypes from \"react\";\nimport type { DocumentNode } from \"graphql\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\nimport { parser } from \"../parser/index.js\";\nimport type { BaseQueryOptions } from \"../types/types.js\";\nimport { Query } from \"../components/index.js\";\nimport {\n  getDisplayName,\n  GraphQLBase,\n  calculateVariablesFromProps,\n  defaultMapPropsToOptions,\n  defaultMapPropsToSkip,\n} from \"./hoc-utils.js\";\nimport type { OperationOption, OptionProps, DataProps } from \"./types.js\";\n\n/**\n * @deprecated\n * Official support for React Apollo higher order components ended in March 2020.\n * This library is still included in the `@apollo/client` package, but it no longer receives feature updates or bug fixes.\n */\nexport function withQuery<\n  TProps extends TGraphQLVariables | Record<string, any> = Record<string, any>,\n  TData extends object = {},\n  TGraphQLVariables extends object = {},\n  TChildProps extends object = DataProps<TData, TGraphQLVariables>,\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  const operation = parser(document);\n  // extract options\n  const {\n    options = defaultMapPropsToOptions,\n    skip = defaultMapPropsToSkip,\n    alias = \"Apollo\",\n  } = operationOptions;\n\n  let mapPropsToOptions = options as (props: any) => BaseQueryOptions;\n  if (typeof mapPropsToOptions !== \"function\") {\n    mapPropsToOptions = () => options as BaseQueryOptions;\n  }\n\n  let mapPropsToSkip = skip as (props: any) => boolean;\n  if (typeof mapPropsToSkip !== \"function\") {\n    mapPropsToSkip = () => skip as any;\n  }\n\n  // allow for advanced referential equality checks\n  let lastResultProps: TChildProps | void;\n  return (\n    WrappedComponent: ReactTypes.ComponentType<TProps & TChildProps>\n  ): ReactTypes.ComponentClass<TProps> => {\n    const graphQLDisplayName = `${alias}(${getDisplayName(WrappedComponent)})`;\n    class GraphQL extends GraphQLBase<TProps, TChildProps> {\n      static displayName = graphQLDisplayName;\n      static WrappedComponent = WrappedComponent;\n\n      render() {\n        let props = this.props;\n        const shouldSkip = mapPropsToSkip(props);\n        const opts =\n          shouldSkip ? Object.create(null) : { ...mapPropsToOptions(props) };\n\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n\n        return (\n          <Query\n            {...opts}\n            displayName={graphQLDisplayName}\n            skip={shouldSkip}\n            query={document}\n          >\n            {({ client: _, data, ...r }: any) => {\n              if (operationOptions.withRef) {\n                this.withRef = true;\n                props = Object.assign({}, props, {\n                  ref: this.setWrappedInstance,\n                });\n              }\n\n              // if we have skipped, no reason to manage any reshaping\n              if (shouldSkip) {\n                return (\n                  <WrappedComponent\n                    {...(props as TProps)}\n                    {...({} as TChildProps)}\n                  />\n                );\n              }\n\n              // the HOC's historically hoisted the data from the execution result\n              // up onto the result since it was passed as a nested prop\n              // we massage the Query components shape here to replicate that\n              const result = Object.assign(r, data || {});\n              const name = operationOptions.name || \"data\";\n              let childProps = { [name]: result };\n              if (operationOptions.props) {\n                const newResult: OptionProps<TProps, TData, TGraphQLVariables> =\n                  {\n                    [name]: result,\n                    ownProps: props as TProps,\n                  };\n                lastResultProps = operationOptions.props(\n                  newResult,\n                  lastResultProps\n                );\n                childProps = lastResultProps;\n              }\n\n              return (\n                <WrappedComponent\n                  {...(props as TProps)}\n                  {...(childProps as TChildProps)}\n                />\n              );\n            }}\n          </Query>\n        );\n      }\n    }\n\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}