{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\php_projects\\\\scandiweb_store\\\\frontend\\\\src\\\\pages\\\\productDetails\\\\ProductDetails.jsx\";\nimport React, { Component } from 'react';\nimport { Query } from '@apollo/client/react/components';\nimport { GET_PRODUCT_DETAILS } from '../../graphql/queries.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProductDetails extends Component {\n  render() {\n    const param = Number(window.location.pathname.split(\"/\")[2] || null);\n    const sku_id = parseInt(param, 10);\n    return /*#__PURE__*/_jsxDEV(Query, {\n      query: GET_PRODUCT_DETAILS,\n      variables: {\n        sku_id\n      },\n      children: ({\n        loading,\n        error,\n        data\n      }) => {\n        if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 41\n        }, this);\n        if (error) {\n          console.error(\"Error details:\", error); // Print error details to console for debugging\n          if (error.networkError) {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Network error: \", error.networkError.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 36\n            }, this);\n          }\n          if (error.graphQLErrors) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"GraphQL query error:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this), error.graphQLErrors.map(({\n                message,\n                locations,\n                path\n              }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Error message: \", message]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Location: \", locations ? locations.map(loc => `Line (${loc.line}, Column ${loc.column})`).join(', ') : 'Not available']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Path: \", path ? path.join(' > ') : 'Not available']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"An unknown error occurred.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 32\n          }, this);\n        }\n        const {\n          product\n        } = data;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: product ? /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0644\\u0645 \\u064A\\u062A\\u0645 \\u0627\\u0644\\u0639\\u062B\\u0648\\u0631 \\u0639\\u0644\\u0649 \\u0627\\u0644\\u0645\\u0646\\u062A\\u062C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ProductDetails;","map":{"version":3,"names":["React","Component","Query","GET_PRODUCT_DETAILS","jsxDEV","_jsxDEV","ProductDetails","render","param","Number","window","location","pathname","split","sku_id","parseInt","query","variables","children","loading","error","data","fileName","_jsxFileName","lineNumber","columnNumber","console","networkError","message","graphQLErrors","map","locations","path","index","loc","line","column","join","product"],"sources":["C:/laragon/www/php_projects/scandiweb_store/frontend/src/pages/productDetails/ProductDetails.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Query } from '@apollo/client/react/components';\r\nimport { GET_PRODUCT_DETAILS } from '../../graphql/queries.js';\r\n\r\nclass ProductDetails extends Component {\r\n    render() {\r\n        const param = Number(window.location.pathname.split(\"/\")[2] || null);\r\n        const sku_id = parseInt(param, 10)\r\n\r\n\r\n        return (\r\n            <Query query={GET_PRODUCT_DETAILS} variables={{ sku_id }}>\r\n\r\n\r\n                {({ loading, error, data }) => {\r\n\r\n                    if (loading) return <p>loading...</p>;\r\n\r\n                    if (error) {\r\n                        console.error(\"Error details:\", error);  // Print error details to console for debugging\r\n                        if (error.networkError) {\r\n                            return <p>Network error: {error.networkError.message}</p>;\r\n                        }\r\n\r\n                        if (error.graphQLErrors) {\r\n                            return (\r\n                                <div>\r\n                                    <p>GraphQL query error:</p>\r\n                                    {error.graphQLErrors.map(({ message, locations, path }, index) => (\r\n                                        <div key={index}>\r\n                                            <p>Error message: {message}</p>\r\n                                            <p>Location: {locations ? locations.map(loc => `Line (${loc.line}, Column ${loc.column})`).join(', ') : 'Not available'}</p>\r\n                                            <p>Path: {path ? path.join(' > ') : 'Not available'}</p>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            );\r\n                        }\r\n\r\n                        return <p>An unknown error occurred.</p>;\r\n                    }\r\n\r\n\r\n\r\n\r\n                    const { product } = data;\r\n\r\n                    return (\r\n                        <div>\r\n                            {product ? (\r\n                                <h1></h1>\r\n                            ) : (\r\n                                <p>لم يتم العثور على المنتج</p>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Query>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}